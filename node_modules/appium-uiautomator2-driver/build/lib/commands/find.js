"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.helpers = exports.default = void 0;
require("source-map-support/register");
var _cssConverter = _interopRequireDefault(require("../css-converter"));
const helpers = {};
exports.helpers = helpers;
const MAGIC_FIRST_VIS_CHILD_SEL = /\/\*\[@firstVisible ?= ?('|")true\1\]/;
const MAGIC_SCROLLABLE_SEL = /\/\/\*\[@scrollable ?= ?('|")true\1\]/;
const MAGIC_SCROLLABLE_BY = 'new UiSelector().scrollable(true)';
helpers.doFindElementOrEls = async function (params) {
  if (params.strategy === 'xpath' && MAGIC_FIRST_VIS_CHILD_SEL.test(params.selector)) {
    let elementId = params.context;
    return await this.uiautomator2.jwproxy.command(`/appium/element/${elementId}/first_visible`, 'GET', {});
  }
  if (params.strategy === 'xpath' && MAGIC_SCROLLABLE_SEL.test(params.selector)) {
    params.strategy = '-android uiautomator';
    params.selector = MAGIC_SCROLLABLE_BY;
  }
  if (params.strategy === 'css selector') {
    params.strategy = '-android uiautomator';
    params.selector = new _cssConverter.default(params.selector, this.opts.appPackage).toUiAutomatorSelector();
  }
  return await this.uiautomator2.jwproxy.command(`/element${params.multiple ? 's' : ''}`, 'POST', params);
};
var _default = helpers;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY3NzQ29udmVydGVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJoZWxwZXJzIiwiZXhwb3J0cyIsIk1BR0lDX0ZJUlNUX1ZJU19DSElMRF9TRUwiLCJNQUdJQ19TQ1JPTExBQkxFX1NFTCIsIk1BR0lDX1NDUk9MTEFCTEVfQlkiLCJkb0ZpbmRFbGVtZW50T3JFbHMiLCJwYXJhbXMiLCJzdHJhdGVneSIsInRlc3QiLCJzZWxlY3RvciIsImVsZW1lbnRJZCIsImNvbnRleHQiLCJ1aWF1dG9tYXRvcjIiLCJqd3Byb3h5IiwiY29tbWFuZCIsIkNzc0NvbnZlcnRlciIsIm9wdHMiLCJhcHBQYWNrYWdlIiwidG9VaUF1dG9tYXRvclNlbGVjdG9yIiwibXVsdGlwbGUiLCJfZGVmYXVsdCIsImRlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvY29tbWFuZHMvZmluZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ3NzQ29udmVydGVyIGZyb20gJy4uL2Nzcy1jb252ZXJ0ZXInO1xuXG5jb25zdCBoZWxwZXJzID0ge307XG5cbi8vIHdlIG92ZXJyaWRlIHRoZSB4cGF0aCBzZWFyY2ggZm9yIHRoaXMgZmlyc3QtdmlzaWJsZS1jaGlsZCBzZWxlY3Rvciwgd2hpY2hcbi8vIGxvb2tzIGxpa2UgLypbQGZpcnN0VmlzaWJsZT1cInRydWVcIl1cbmNvbnN0IE1BR0lDX0ZJUlNUX1ZJU19DSElMRF9TRUwgPSAvXFwvXFwqXFxbQGZpcnN0VmlzaWJsZSA/PSA/KCd8XCIpdHJ1ZVxcMVxcXS87XG5cbmNvbnN0IE1BR0lDX1NDUk9MTEFCTEVfU0VMID0gL1xcL1xcL1xcKlxcW0BzY3JvbGxhYmxlID89ID8oJ3xcIil0cnVlXFwxXFxdLztcbmNvbnN0IE1BR0lDX1NDUk9MTEFCTEVfQlkgPSAnbmV3IFVpU2VsZWN0b3IoKS5zY3JvbGxhYmxlKHRydWUpJztcblxuLyoqXG4gKiBPdmVycmlkaW5nIGhlbHBlcnMuZG9GaW5kRWxlbWVudE9yRWxzIGZ1bmN0aW9uYWxpdHkgb2YgYXBwaXVtLWFuZHJvaWQtZHJpdmVyLFxuICogdGhpcy5lbGVtZW50IGluaXRpYWxpemVkIGluIGZpbmQuanMgb2YgYXBwaXVtLWFuZHJvaWQtZHJpdmUuXG4gKi9cbmhlbHBlcnMuZG9GaW5kRWxlbWVudE9yRWxzID0gYXN5bmMgZnVuY3Rpb24gKHBhcmFtcykge1xuICBpZiAocGFyYW1zLnN0cmF0ZWd5ID09PSAneHBhdGgnICYmIE1BR0lDX0ZJUlNUX1ZJU19DSElMRF9TRUwudGVzdChwYXJhbXMuc2VsZWN0b3IpKSB7XG4gICAgbGV0IGVsZW1lbnRJZCA9IHBhcmFtcy5jb250ZXh0O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoYC9hcHBpdW0vZWxlbWVudC8ke2VsZW1lbnRJZH0vZmlyc3RfdmlzaWJsZWAsICdHRVQnLCB7fSk7XG4gIH1cbiAgaWYgKHBhcmFtcy5zdHJhdGVneSA9PT0gJ3hwYXRoJyAmJiBNQUdJQ19TQ1JPTExBQkxFX1NFTC50ZXN0KHBhcmFtcy5zZWxlY3RvcikpIHtcbiAgICBwYXJhbXMuc3RyYXRlZ3kgPSAnLWFuZHJvaWQgdWlhdXRvbWF0b3InO1xuICAgIHBhcmFtcy5zZWxlY3RvciA9IE1BR0lDX1NDUk9MTEFCTEVfQlk7XG4gIH1cbiAgaWYgKHBhcmFtcy5zdHJhdGVneSA9PT0gJ2NzcyBzZWxlY3RvcicpIHtcbiAgICBwYXJhbXMuc3RyYXRlZ3kgPSAnLWFuZHJvaWQgdWlhdXRvbWF0b3InO1xuICAgIHBhcmFtcy5zZWxlY3RvciA9IG5ldyBDc3NDb252ZXJ0ZXIocGFyYW1zLnNlbGVjdG9yLCB0aGlzLm9wdHMuYXBwUGFja2FnZSlcbiAgICAgIC50b1VpQXV0b21hdG9yU2VsZWN0b3IoKTtcbiAgfVxuICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKGAvZWxlbWVudCR7cGFyYW1zLm11bHRpcGxlID8gJ3MnIDogJyd9YCwgJ1BPU1QnLCBwYXJhbXMpO1xufTtcblxuZXhwb3J0IHsgaGVscGVycyB9O1xuZXhwb3J0IGRlZmF1bHQgaGVscGVycztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFBQSxhQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxNQUFNQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0FBQUNDLE9BQUEsQ0FBQUQsT0FBQSxHQUFBQSxPQUFBO0FBSW5CLE1BQU1FLHlCQUF5QixHQUFHLHVDQUF1QztBQUV6RSxNQUFNQyxvQkFBb0IsR0FBRyx1Q0FBdUM7QUFDcEUsTUFBTUMsbUJBQW1CLEdBQUcsbUNBQW1DO0FBTS9ESixPQUFPLENBQUNLLGtCQUFrQixHQUFHLGdCQUFnQkMsTUFBTSxFQUFFO0VBQ25ELElBQUlBLE1BQU0sQ0FBQ0MsUUFBUSxLQUFLLE9BQU8sSUFBSUwseUJBQXlCLENBQUNNLElBQUksQ0FBQ0YsTUFBTSxDQUFDRyxRQUFRLENBQUMsRUFBRTtJQUNsRixJQUFJQyxTQUFTLEdBQUdKLE1BQU0sQ0FBQ0ssT0FBTztJQUM5QixPQUFPLE1BQU0sSUFBSSxDQUFDQyxZQUFZLENBQUNDLE9BQU8sQ0FBQ0MsT0FBTyxDQUFFLG1CQUFrQkosU0FBVSxnQkFBZSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztFQUN6RztFQUNBLElBQUlKLE1BQU0sQ0FBQ0MsUUFBUSxLQUFLLE9BQU8sSUFBSUosb0JBQW9CLENBQUNLLElBQUksQ0FBQ0YsTUFBTSxDQUFDRyxRQUFRLENBQUMsRUFBRTtJQUM3RUgsTUFBTSxDQUFDQyxRQUFRLEdBQUcsc0JBQXNCO0lBQ3hDRCxNQUFNLENBQUNHLFFBQVEsR0FBR0wsbUJBQW1CO0VBQ3ZDO0VBQ0EsSUFBSUUsTUFBTSxDQUFDQyxRQUFRLEtBQUssY0FBYyxFQUFFO0lBQ3RDRCxNQUFNLENBQUNDLFFBQVEsR0FBRyxzQkFBc0I7SUFDeENELE1BQU0sQ0FBQ0csUUFBUSxHQUFHLElBQUlNLHFCQUFZLENBQUNULE1BQU0sQ0FBQ0csUUFBUSxFQUFFLElBQUksQ0FBQ08sSUFBSSxDQUFDQyxVQUFVLENBQUMsQ0FDdEVDLHFCQUFxQixDQUFDLENBQUM7RUFDNUI7RUFDQSxPQUFPLE1BQU0sSUFBSSxDQUFDTixZQUFZLENBQUNDLE9BQU8sQ0FBQ0MsT0FBTyxDQUFFLFdBQVVSLE1BQU0sQ0FBQ2EsUUFBUSxHQUFHLEdBQUcsR0FBRyxFQUFHLEVBQUMsRUFBRSxNQUFNLEVBQUViLE1BQU0sQ0FBQztBQUN6RyxDQUFDO0FBQUMsSUFBQWMsUUFBQSxHQUdhcEIsT0FBTztBQUFBQyxPQUFBLENBQUFvQixPQUFBLEdBQUFELFFBQUEifQ==