{"version":3,"file":"battery.js","names":["extensions","commands","exports","mobileGetBatteryInfo","result","uiautomator2","jwproxy","command","state","status","Object","assign","_default","default"],"sources":["../../../lib/commands/battery.js"],"sourcesContent":["let extensions = {}, commands = {};\n\n/**\n * @typedef {Object} BatteryInfo\n *\n * @property {number} level - Battery level in range [0.0, 1.0], where\n *                            1.0 means 100% charge.\n *                             -1 is returned if the actual value cannot be\n *                            retrieved from the system.\n * @property {number} state - Battery state. The following values are possible:\n *   BATTERY_STATUS_UNKNOWN = 1\n *   BATTERY_STATUS_CHARGING = 2\n *   BATTERY_STATUS_DISCHARGING = 3\n *   BATTERY_STATUS_NOT_CHARGING = 4\n *   BATTERY_STATUS_FULL = 5\n *   -1 is returned if the actual value cannot be retrieved from the system.\n */\n\n/**\n * Reads the battery information from the device under test.\n *\n * @returns {BatteryInfo} The actual battery info\n */\ncommands.mobileGetBatteryInfo = async function () {\n  const result = await this.uiautomator2.jwproxy.command('/appium/device/battery_info', 'GET', {});\n  // Give it the same name as in iOS\n  result.state = result.status;\n  delete result.status;\n  return result;\n};\n\nObject.assign(extensions, commands);\nexport { commands };\nexport default extensions;\n"],"mappings":";;;;;;;AAAA,IAAIA,UAAU,GAAG,CAAC,CAAC;EAAEC,QAAQ,GAAG,CAAC,CAAC;AAACC,OAAA,CAAAD,QAAA,GAAAA,QAAA;AAuBnCA,QAAQ,CAACE,oBAAoB,GAAG,kBAAkB;EAChD,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,YAAY,CAACC,OAAO,CAACC,OAAO,CAAC,6BAA6B,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EAEhGH,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACK,MAAM;EAC5B,OAAOL,MAAM,CAACK,MAAM;EACpB,OAAOL,MAAM;AACf,CAAC;AAEDM,MAAM,CAACC,MAAM,CAACX,UAAU,EAAEC,QAAQ,CAAC;AAAC,IAAAW,QAAA,GAErBZ,UAAU;AAAAE,OAAA,CAAAW,OAAA,GAAAD,QAAA"}