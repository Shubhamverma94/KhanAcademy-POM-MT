{"version":3,"file":"general.js","names":["_lodash","_interopRequireDefault","require","_bluebird","_driver","_extensions","extensions","commands","helpers","getPageSource","uiautomator2","jwproxy","command","getClipboard","adb","getApiLevel","doSendKeys","params","keyevent","keycode","metastate","log","debug","back","getDisplayDensity","getWindowSize","getWindowRect","width","height","x","y","executeMobile","mobileCommand","opts","mobileCommandsMapping","shell","execEmuConsoleCommand","dragGesture","flingGesture","doubleClickGesture","clickGesture","longClickGesture","pinchCloseGesture","pinchOpenGesture","swipeGesture","scrollGesture","scrollBackTo","scroll","viewportScreenshot","viewportRect","deepLink","startLogsBroadcast","stopLogsBroadcast","acceptAlert","dismissAlert","batteryInfo","deviceInfo","getDeviceTime","changePermissions","getPermissions","performEditorAction","startScreenStreaming","stopScreenStreaming","getNotifications","openNotifications","listSms","type","replaceElementValue","pushFile","pullFile","pullFolder","deleteFile","isAppInstalled","queryAppState","activateApp","removeApp","terminateApp","installApp","clearApp","backgroundApp","getCurrentActivity","getCurrentPackage","startActivity","startService","stopService","broadcast","getContexts","getAppStrings","installMultipleApks","lock","unlock","isLocked","refreshGpsCache","startMediaProjectionRecording","isMediaProjectionRecordingRunning","stopMediaProjectionRecording","getConnectivity","setConnectivity","toggleGps","isGpsEnables","hideKeyboard","isKeyboardShown","pressKey","getSystemBars","fingerprint","sendSms","gsmCall","gsmSignal","gsmVoice","powerAc","powerCapacity","networkSpeed","sensorSet","getPerformanceData","getPerformanceDataTypes","_","has","errors","UnknownCommandError","keys","mobileViewportScreenshot","getViewportScreenshot","mobileViewPortRect","getViewPortRect","setUrl","url","startUri","appPackage","mobileDeepLink","package","pkg","waitForLaunch","updateSettings","settings","update","getSettings","driverSettings","serverSettings","wrapBootstrapDisconnect","wrapped","suspendChromedriverProxy","chromedriver","proxyReqRes","bind","proxyCommand","jwpProxyActive","mobileGetDeviceInfo","mobileType","text","isUndefined","errorAndThrow","typeUnicode","mobileInstallMultipleApks","isArray","apks","isEmpty","InvalidArgumentError","B","all","map","app","configureApp","APK_EXTENSION","options","mobileBackgroundApp","seconds","background","Object","assign","_default","exports","default"],"sources":["../../../lib/commands/general.js"],"sourcesContent":["import _ from 'lodash';\nimport B from 'bluebird';\nimport { errors } from 'appium/driver';\nimport { APK_EXTENSION } from '../extensions';\n\nlet extensions = {},\n    commands = {},\n    helpers = {};\n\ncommands.getPageSource = async function () {\n  return await this.uiautomator2.jwproxy.command('/source', 'GET', {});\n};\n\ncommands.getClipboard = async function () {\n  return (await this.adb.getApiLevel() < 29)\n    ? (await this.uiautomator2.jwproxy.command('/appium/device/get_clipboard', 'POST', {}))\n    : (await this.adb.getClipboard());\n};\n\n// Need to override this for correct unicode support\ncommands.doSendKeys = async function (params) {\n  await this.uiautomator2.jwproxy.command('/keys', 'POST', params);\n};\n\n// uiautomator2 doesn't support metastate for keyevents\ncommands.keyevent = async function (keycode, metastate) {\n  this.log.debug(`Ignoring metastate ${metastate}`);\n  await this.adb.keyevent(keycode);\n};\n\n// Use ADB since we don't have UiAutomator\ncommands.back = async function () {\n  await this.adb.keyevent(4);\n};\n\ncommands.getDisplayDensity = async function getDisplayDensity () {\n  return await this.uiautomator2.jwproxy.command('/appium/device/display_density', 'GET', {});\n};\n\n// memoized in constructor\ncommands.getWindowSize = async function () {\n  return await this.uiautomator2.jwproxy.command('/window/current/size', 'GET', {});\n};\n\n// For W3C\ncommands.getWindowRect = async function () {\n  const {width, height} = await this.getWindowSize();\n  return {\n    width,\n    height,\n    x: 0,\n    y: 0,\n  };\n};\n\nextensions.executeMobile = async function (mobileCommand, opts = {}) {\n  const mobileCommandsMapping = {\n    shell: 'mobileShell',\n\n    execEmuConsoleCommand: 'mobileExecEmuConsoleCommand',\n\n    dragGesture: 'mobileDragGesture',\n    flingGesture: 'mobileFlingGesture',\n    doubleClickGesture: 'mobileDoubleClickGesture',\n    clickGesture: 'mobileClickGesture',\n    longClickGesture: 'mobileLongClickGesture',\n    pinchCloseGesture: 'mobilePinchCloseGesture',\n    pinchOpenGesture: 'mobilePinchOpenGesture',\n    swipeGesture: 'mobileSwipeGesture',\n    scrollGesture: 'mobileScrollGesture',\n    scrollBackTo: 'mobileScrollBackTo',\n    scroll: 'mobileScroll',\n    viewportScreenshot: 'mobileViewportScreenshot',\n    viewportRect: 'mobileViewPortRect',\n\n    deepLink: 'mobileDeepLink',\n\n    startLogsBroadcast: 'mobileStartLogsBroadcast',\n    stopLogsBroadcast: 'mobileStopLogsBroadcast',\n\n    acceptAlert: 'mobileAcceptAlert',\n    dismissAlert: 'mobileDismissAlert',\n\n    batteryInfo: 'mobileGetBatteryInfo',\n\n    deviceInfo: 'mobileGetDeviceInfo',\n\n    getDeviceTime: 'mobileGetDeviceTime',\n\n    changePermissions: 'mobileChangePermissions',\n    getPermissions: 'mobileGetPermissions',\n\n    performEditorAction: 'mobilePerformEditorAction',\n\n    startScreenStreaming: 'mobileStartScreenStreaming',\n    stopScreenStreaming: 'mobileStopScreenStreaming',\n\n    getNotifications: 'mobileGetNotifications',\n    openNotifications: 'openNotifications',\n\n    listSms: 'mobileListSms',\n\n    type: 'mobileType',\n    replaceElementValue: 'mobileReplaceElementValue',\n\n    pushFile: 'mobilePushFile',\n    pullFile: 'mobilePullFile',\n    pullFolder: 'mobilePullFolder',\n    deleteFile: 'mobileDeleteFile',\n\n    isAppInstalled: 'mobileIsAppInstalled',\n    queryAppState: 'mobileQueryAppState',\n    activateApp: 'mobileActivateApp',\n    removeApp: 'mobileRemoveApp',\n    terminateApp: 'mobileTerminateApp',\n    installApp: 'mobileInstallApp',\n    clearApp: 'mobileClearApp',\n    backgroundApp: 'mobileBackgroundApp',\n    getCurrentActivity: 'getCurrentActivity',\n    getCurrentPackage: 'getCurrentPackage',\n\n    startActivity: 'mobileStartActivity',\n    startService: 'mobileStartService',\n    stopService: 'mobileStopService',\n    broadcast: 'mobileBroadcast',\n\n    getContexts: 'mobileGetContexts',\n\n    getAppStrings: 'mobileGetAppStrings',\n\n    installMultipleApks: 'mobileInstallMultipleApks',\n\n    lock: 'lock',\n    unlock: 'mobileUnlock',\n    isLocked: 'isLocked',\n\n    refreshGpsCache: 'mobileRefreshGpsCache',\n\n    startMediaProjectionRecording: 'mobileStartMediaProjectionRecording',\n    isMediaProjectionRecordingRunning: 'mobileIsMediaProjectionRecordingRunning',\n    stopMediaProjectionRecording: 'mobileStopMediaProjectionRecording',\n\n    getConnectivity: 'mobileGetConnectivity',\n    setConnectivity: 'mobileSetConnectivity',\n    toggleGps: 'toggleLocationServices',\n    isGpsEnables: 'isLocationServicesEnabled',\n\n    hideKeyboard: 'mobileHideKeyboard',\n    isKeyboardShown: 'isKeyboardShown',\n\n    pressKey: 'mobilePressKey',\n\n    getDisplayDensity: 'getDisplayDensity',\n    getSystemBars: 'getSystemBars',\n\n    fingerprint: 'mobilefingerprint',\n    sendSms: 'mobileSendSms',\n    gsmCall: 'mobileGsmCall',\n    gsmSignal: 'mobileGsmSignal',\n    gsmVoice: 'mobileGsmVoice',\n    powerAc: 'mobilePowerAC',\n    powerCapacity: 'mobilePowerCapacity',\n    networkSpeed: 'mobileNetworkSpeed',\n    sensorSet: 'sensorSet',\n\n    getPerformanceData: 'mobileGetPerformanceData',\n    getPerformanceDataTypes: 'getPerformanceDataTypes',\n  };\n\n  if (!_.has(mobileCommandsMapping, mobileCommand)) {\n    throw new errors.UnknownCommandError(`Unknown mobile command \"${mobileCommand}\". ` +\n      `Only ${_.keys(mobileCommandsMapping)} commands are supported.`);\n  }\n  return await this[mobileCommandsMapping[mobileCommand]](opts);\n};\n\ncommands.mobileViewportScreenshot = async function () {\n  return await this.getViewportScreenshot();\n};\n\n/**\n * @typedef {object} Rectangle\n * @property {number} left - The left coordinate of the Rectangle.\n * @property {number} top - The top coordinate of the Rectangle.\n * @property {number} width - The width of Rectangle.\n * @property {number} height - The height of Rectangle.\n */\n\n/**\n * Returns the viewport coordinates.\n * @returns {Rectangle} The viewport coordinates.\n */\ncommands.mobileViewPortRect = async function mobileViewPortRect () {\n  return await this.getViewPortRect();\n};\n\ncommands.setUrl = async function (url) {\n  await this.adb.startUri(url, this.opts.appPackage);\n};\n\n/**\n * @typedef {object} DeepLinkOpts\n * @property {!string} url - The name of URL to start.\n * @property {!string} package - The name of the package to start the URI with.\n * @property {?boolean} waitForLaunch [true] - if `false` then adb won't wait\n * for the started activity to return the control\n */\n\n/**\n * Start URL that take users directly to specific content in the app\n * @param {DeepLinkOpts} opts\n */\ncommands.mobileDeepLink = async function (opts = {}) {\n  const {\n    url,\n    package: pkg,\n    waitForLaunch,\n  } = opts;\n  return await this.adb.startUri(url, pkg, { waitForLaunch });\n};\n\ncommands.openNotifications = async function () {\n  return await this.uiautomator2.jwproxy.command('/appium/device/open_notifications', 'POST', {});\n};\n\ncommands.updateSettings = async function (settings) {\n  await this.settings.update(settings);\n  await this.uiautomator2.jwproxy.command('/appium/settings', 'POST', {settings});\n};\n\ncommands.getSettings = async function () {\n  const driverSettings = this.settings.getSettings();\n  const serverSettings = await this.uiautomator2.jwproxy.command('/appium/settings', 'GET');\n  return {...driverSettings, ...serverSettings};\n};\n\n/**\n * Overriding appium-android-driver's wrapBootstrapDisconnect,\n * unlike in appium-android-driver avoiding adb restarting as it intern\n * kills UiAutomator2 server running in the device.\n **/\nhelpers.wrapBootstrapDisconnect = async function (wrapped) {\n  await wrapped();\n};\n\n// Stop proxying to any Chromedriver and redirect to uiautomator2\nhelpers.suspendChromedriverProxy = function () {\n  this.chromedriver = null;\n  this.proxyReqRes = this.uiautomator2.proxyReqRes.bind(this.uiautomator2);\n  this.proxyCommand = this.uiautomator2.proxyCommand.bind(this.uiautomator2);\n  this.jwpProxyActive = true;\n};\n\n/**\n * The list of available info entries can be found at\n * https://github.com/appium/appium-uiautomator2-server/blob/master/app/src/main/java/io/appium/uiautomator2/handler/GetDeviceInfo.java\n */\ncommands.mobileGetDeviceInfo = async function () {\n  return await this.uiautomator2.jwproxy.command('/appium/device/info', 'GET');\n};\n\n/**\n * @typedef {Object} TypingOptions\n * @property {!string|number|boolean} text - The text to type\n */\n\n/**\n * Types the given Unicode string.\n * It is expected that the focus is already put\n * to the destination input field before this method is called.\n *\n * @param {TypingOptions} opts\n * @returns {boolean} `true` if the input text has been successfully sent to adb\n * @throws {Error} if `text` property has not been provided\n */\ncommands.mobileType = async function mobileType (opts = {}) {\n  const {\n    text,\n  } = opts;\n  if (_.isUndefined(text)) {\n    this.log.errorAndThrow(`The 'text' argument is mandatory`);\n  }\n  return await this.adb.typeUnicode(text);\n};\n\n\n/**\n * @typedef {Object} InstallOptions\n * @property {boolean} allowTestPackages [false] - Set to true in order to allow test\n *                                                 packages installation.\n * @property {boolean} useSdcard [false] - Set to true to install the app on sdcard\n *                                         instead of the device memory.\n * @property {boolean} grantPermissions [false] - Set to true in order to grant all the\n *                                                permissions requested in the application's manifest\n *                                                automatically after the installation is completed\n *                                                under Android 6+.\n * @property {boolean} replace [true] - Set it to false if you don't want\n *                                      the application to be upgraded/reinstalled\n *                                      if it is already present on the device.\n * @property {boolean} partialInstall [false] - Install apks partially. It is used for 'install-multiple'.\n *                                             https://android.stackexchange.com/questions/111064/what-is-a-partial-application-install-via-adb\n */\n\n/**\n * @typedef {Object} InstallMultipleApksOptions\n * @property {Array<string>} apks - The list of APKs to install. Each APK should be a path to a apk\n *                                  or downloadable URL as HTTP/HTTPS.\n * @property {InstallOptions} options\n */\n\n/**\n * Install multiple APKs with `install-multiple` option.\n *\n * @param {InstallMultipleApksOptions} opts\n * @throws {Error} if an error occured while installing the given APKs.\n */\ncommands.mobileInstallMultipleApks = async function (opts = {}) {\n  if (!_.isArray(opts.apks) || _.isEmpty(opts.apks)) {\n    throw new errors.InvalidArgumentError('No apks are given to install');\n  }\n  const apks = await B.all(opts.apks\n    .map((app) => this.helpers.configureApp(app, [APK_EXTENSION])));\n  await this.adb.installMultipleApks(apks, opts.options);\n};\n\n/**\n * @typedef {Object} BackgroundAppOptions\n * @property {number} seconds The amount of seconds to wait between\n * putting the app to background and restoring it. Any negative value\n * means to not restore the app after putting it to background.\n */\n\n/**\n * Puts the app to background and waits the given number of seconds Then restores the app\n * if necessary. The call is blocking.\n *\n * @param {BackgroundAppOptions} opts\n */\ncommands.mobileBackgroundApp = async function mobileBackgroundApp (opts = {}) {\n  const {\n    seconds = -1,\n  } = opts;\n  return await this.background(seconds);\n};\n\nObject.assign(extensions, commands, helpers);\n\nexport default extensions;\n"],"mappings":"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"}