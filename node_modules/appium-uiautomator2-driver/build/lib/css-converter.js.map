{"version":3,"file":"css-converter.js","names":["_cssSelectorParser","require","_lodash","_driver","parser","CssSelectorParser","registerSelectorPseudos","registerNestingOperators","registerAttrEqualityMods","enableSubstitutes","RESOURCE_ID","ID_LOCATOR_PATTERN","BOOLEAN_ATTRS","NUMERIC_ATTRS","STR_ATTRS","ALL_ATTRS","ATTRIBUTE_ALIASES","toSnakeCase","str","tokens","split","map","charAt","toUpperCase","slice","toLowerCase","out","join","assertGetBool","css","_css$value","val","value","includes","Error","name","assertGetAttrName","attrName","officialAttr","aliasAttrs","getWordMatcherRegex","word","escapeRegExp","CssConverter","constructor","selector","pkg","formatIdLocator","locator","test","parseAttr","cssAttr","valueType","methodName","operator","parsePseudo","cssPseudo","pseudoName","parseCssRule","cssRule","nestingOperator","uiAutomatorSelector","tagName","androidClass","classNames","cssClassNames","push","id","attrs","attr","pseudos","pseudo","rule","parseCssObject","type","selectors","toUiAutomatorSelector","cssObj","parse","e","errors","InvalidSelectorError","_default","exports","default"],"sources":["../../lib/css-converter.js"],"sourcesContent":["import { CssSelectorParser } from 'css-selector-parser';\nimport { escapeRegExp } from 'lodash';\nimport { errors } from 'appium/driver';\n\nconst parser = new CssSelectorParser();\nparser.registerSelectorPseudos('has');\nparser.registerNestingOperators('>', '+', '~');\nparser.registerAttrEqualityMods('^', '$', '*', '~');\nparser.enableSubstitutes();\n\nconst RESOURCE_ID = 'resource-id';\nconst ID_LOCATOR_PATTERN = /^[a-zA-Z_][a-zA-Z0-9._]*:id\\/[\\S]+$/;\n\nconst BOOLEAN_ATTRS = [\n  'checkable', 'checked', 'clickable', 'enabled', 'focusable',\n  'focused', 'long-clickable', 'scrollable', 'selected',\n];\n\nconst NUMERIC_ATTRS = [\n  'index', 'instance',\n];\n\nconst STR_ATTRS = [\n  'description', RESOURCE_ID, 'text', 'class-name', 'package-name'\n];\n\nconst ALL_ATTRS = [\n  ...BOOLEAN_ATTRS,\n  ...NUMERIC_ATTRS,\n  ...STR_ATTRS,\n];\n\nconst ATTRIBUTE_ALIASES = [\n  [RESOURCE_ID, ['id']],\n  ['description', [\n    'content-description', 'content-desc',\n    'desc', 'accessibility-id',\n  ]],\n  ['index', ['nth-child']],\n];\n\n/**\n * Convert hyphen separated word to snake case\n *\n * @param {string} str\n * @returns {string} The hyphen separated word translated to snake case\n */\nfunction toSnakeCase (str) {\n  if (!str) {\n    return '';\n  }\n  const tokens = str.split('-').map((str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase());\n  const out = tokens.join('');\n  return out.charAt(0).toLowerCase() + out.slice(1);\n}\n\n/**\n * @typedef {Object} CssNameValueObject\n * @property {?name} name The name of the CSS object\n * @property {?string} value The value of the CSS object\n */\n\n/**\n * Get the boolean from a CSS object. If empty, return true. If not true/false/empty, throw exception\n *\n * @param {CssNameValueObject} css A CSS object that has 'name' and 'value'\n * @returns {string} Either 'true' or 'false'. If value is empty, return 'true'\n */\nfunction assertGetBool (css) {\n  const val = css.value?.toLowerCase() || 'true'; // an omitted boolean attribute means 'true' (e.g.: input[checked] means checked is true)\n  if (['true', 'false'].includes(val)) {\n    return val;\n  }\n  throw new Error(`'${css.name}' must be true, false or empty. Found '${css.value}'`);\n}\n\n/**\n * Get the canonical form of a CSS attribute name\n *\n * Converts to lowercase and if an attribute name is an alias for something else, return\n * what it is an alias for\n *\n * @param {Object} css CSS object\n * @returns {string} The canonical attribute name\n */\nfunction assertGetAttrName (css) {\n  const attrName = css.name.toLowerCase();\n\n  // Check if it's supported and if it is, return it\n  if (ALL_ATTRS.includes(attrName)) {\n    return attrName.toLowerCase();\n  }\n\n  // If attrName is an alias for something else, return that\n  for (const [officialAttr, aliasAttrs] of ATTRIBUTE_ALIASES) {\n    if (aliasAttrs.includes(attrName)) {\n      return officialAttr;\n    }\n  }\n  throw new Error(`'${attrName}' is not a valid attribute. ` +\n    `Supported attributes are '${ALL_ATTRS.join(', ')}'`);\n}\n\n/**\n * Get a regex that matches a whole word. For the ~= CSS attribute selector.\n *\n * @param {string} word\n * @returns {string} A regex \"word\" matcher\n */\nfunction getWordMatcherRegex (word) {\n  return `\\\\b(\\\\w*${escapeRegExp(word)}\\\\w*)\\\\b`;\n}\n\n/**\n * @typedef {Object} CssAttr\n * @property {?string} valueType Type of attribute (must be string or empty)\n * @property {?string} value Value of the attribute\n * @property {?string} operator The operator between value and value type (=, *=, , ^=, $=)\n */\n\n/**\n * @typedef {Object} CssRule\n * @property {?string} nestingOperator The nesting operator (aka: combinator https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors)\n * @property {?string} tagName The tag name (aka: type selector https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors)\n * @property {?string[]} classNames An array of CSS class names\n * @property {?CssAttr[]} attrs An array of CSS attributes\n * @property {?CssPseudo[]} attrs An array of CSS pseudos\n * @property {?string} id CSS identifier\n * @property {?CssRule} rule A descendant of this CSS rule\n */\n\n/**\n * @typedef {Object} CssObject\n * @property {?string} type Type of CSS object. 'rule', 'ruleset' or 'selectors'\n */\n\n/**\n * @typedef {Object} CssPseudo\n * @property {?string} valueType The type of CSS pseudo selector (https://www.npmjs.com/package/css-selector-parser for reference)\n * @property {?string} name The name of the pseudo selector\n * @property {?string} value The value of the pseudo selector\n */\n\nclass CssConverter {\n\n  constructor (selector, pkg) {\n    this.selector = selector;\n    this.pkg = pkg;\n  }\n\n  /**\n   * Add `<pkgName>:id/` prefix to beginning of string if it's not there already\n   *\n   * @param {string} locator The initial locator\n   * @returns {string} String with `<pkgName>:id/` prepended (if it wasn't already)\n   */\n  formatIdLocator (locator) {\n    return ID_LOCATOR_PATTERN.test(locator)\n      ? locator\n      : `${this.pkg || 'android'}:id/${locator}`;\n  }\n\n  /**\n   * Convert a CSS attribute into a UiSelector method call\n   *\n   * @param {CssAttr} cssAttr CSS attribute object\n   * @returns {string} CSS attribute parsed as UiSelector\n   */\n  parseAttr (cssAttr) {\n    if (cssAttr.valueType && cssAttr.valueType !== 'string') {\n      throw new Error(`'${cssAttr.name}=${cssAttr.value}' is an invalid attribute. ` +\n        `Only 'string' and empty attribute types are supported. Found '${cssAttr.valueType}'`);\n    }\n    const attrName = assertGetAttrName(cssAttr);\n    const methodName = toSnakeCase(attrName);\n\n    // Validate that it's a supported attribute\n    if (!STR_ATTRS.includes(attrName) && !BOOLEAN_ATTRS.includes(attrName)) {\n      throw new Error(`'${attrName}' is not supported. Supported attributes are ` +\n        `'${[...STR_ATTRS, ...BOOLEAN_ATTRS].join(', ')}'`);\n    }\n\n    // Parse boolean, if it's a boolean attribute\n    if (BOOLEAN_ATTRS.includes(attrName)) {\n      return `.${methodName}(${assertGetBool(cssAttr)})`;\n    }\n\n    // Otherwise parse as string\n    let value = cssAttr.value || '';\n    if (attrName === RESOURCE_ID) {\n      value = this.formatIdLocator(value);\n    }\n    if (value === '') {\n      return `.${methodName}Matches(\"\")`;\n    }\n\n    switch (cssAttr.operator) {\n      case '=':\n        return `.${methodName}(\"${value}\")`;\n      case '*=':\n        if (['description', 'text'].includes(attrName)) {\n          return `.${methodName}Contains(\"${value}\")`;\n        }\n        return `.${methodName}Matches(\"${escapeRegExp(value)}\")`;\n      case '^=':\n        if (['description', 'text'].includes(attrName)) {\n          return `.${methodName}StartsWith(\"${value}\")`;\n        }\n        return `.${methodName}Matches(\"^${escapeRegExp(value)}\")`;\n      case '$=':\n        return `.${methodName}Matches(\"${escapeRegExp(value)}$\")`;\n      case '~=':\n        return `.${methodName}Matches(\"${getWordMatcherRegex(value)}\")`;\n      default:\n        // Unreachable, but adding error in case a new CSS attribute is added.\n        throw new Error(`Unsupported CSS attribute operator '${cssAttr.operator}'. ` +\n          ` '=', '*=', '^=', '$=' and '~=' are supported.`);\n    }\n  }\n\n  /**\n   * Convert a CSS pseudo class to a UiSelector\n   *\n   * @param {CssPseudo} cssPseudo CSS Pseudo class\n   * @returns {string} Pseudo selector parsed as UiSelector\n   */\n  parsePseudo (cssPseudo) {\n    if (cssPseudo.valueType && cssPseudo.valueType !== 'string') {\n      throw new Error(`'${cssPseudo.name}=${cssPseudo.value}'. ` +\n        `Unsupported css pseudo class value type: '${cssPseudo.valueType}'. Only 'string' type or empty is supported.`);\n    }\n\n    const pseudoName = assertGetAttrName(cssPseudo);\n\n    if (BOOLEAN_ATTRS.includes(pseudoName)) {\n      return `.${toSnakeCase(pseudoName)}(${assertGetBool(cssPseudo)})`;\n    }\n\n    if (NUMERIC_ATTRS.includes(pseudoName)) {\n      return `.${pseudoName}(${cssPseudo.value})`;\n    }\n  }\n\n  /**\n   * Convert a CSS rule to a UiSelector\n   * @param {CssRule} cssRule CSS rule definition\n   */\n  parseCssRule (cssRule) {\n    const { nestingOperator } = cssRule;\n    if (nestingOperator && nestingOperator !== ' ') {\n      throw new Error(`'${nestingOperator}' is not a supported combinator. ` +\n        `Only child combinator (>) and descendant combinator are supported.`);\n    }\n\n    let uiAutomatorSelector = 'new UiSelector()';\n    if (cssRule.tagName && cssRule.tagName !== '*') {\n      let androidClass = [cssRule.tagName];\n      if (cssRule.classNames) {\n        for (const cssClassNames of cssRule.classNames) {\n          androidClass.push(cssClassNames);\n        }\n        uiAutomatorSelector += `.className(\"${androidClass.join('.')}\")`;\n      } else {\n        uiAutomatorSelector += `.classNameMatches(\"${cssRule.tagName}\")`;\n      }\n    } else if (cssRule.classNames) {\n      uiAutomatorSelector += `.classNameMatches(\"${cssRule.classNames.join('\\\\.')}\")`;\n    }\n    if (cssRule.id) {\n      uiAutomatorSelector += `.resourceId(\"${this.formatIdLocator(cssRule.id)}\")`;\n    }\n    if (cssRule.attrs) {\n      for (const attr of cssRule.attrs) {\n        uiAutomatorSelector += this.parseAttr(attr);\n      }\n    }\n    if (cssRule.pseudos) {\n      for (const pseudo of cssRule.pseudos) {\n        uiAutomatorSelector += this.parsePseudo(pseudo);\n      }\n    }\n    if (cssRule.rule) {\n      uiAutomatorSelector += `.childSelector(${this.parseCssRule(cssRule.rule)})`;\n    }\n    return uiAutomatorSelector;\n  }\n\n  /**\n   * Convert CSS object to UiAutomator2 selector\n   * @param {CssObject} css CSS object\n   * @returns {string} The CSS object parsed as a UiSelector\n   */\n  parseCssObject (css) {\n    switch (css.type) {\n      case 'rule':\n        return this.parseCssRule(css);\n      case 'ruleSet':\n        return this.parseCssObject(css.rule);\n      case 'selectors':\n        return css.selectors.map((selector) => this.parseCssObject(selector)).join('; ');\n\n      default:\n        // This is never reachable, but if it ever is do this.\n        throw new Error(`UiAutomator does not support '${css.type}' css. Only supports 'rule', 'ruleSet', 'selectors' `);\n    }\n  }\n\n  /**\n   * Convert a CSS selector to a UiAutomator2 selector\n   *\n   * @returns {string} The CSS selector converted to a UiSelector\n   */\n  toUiAutomatorSelector () {\n    let cssObj;\n    try {\n      cssObj = parser.parse(this.selector);\n    } catch (e) {\n      throw new errors.InvalidSelectorError(`Invalid CSS selector '${this.selector}'. Reason: '${e}'`);\n    }\n    try {\n      return this.parseCssObject(cssObj);\n    } catch (e) {\n      throw new errors.InvalidSelectorError(`Unsupported CSS selector '${this.selector}'. Reason: '${e}'`);\n    }\n  }\n}\n\nexport default CssConverter;"],"mappings":"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"}