{"version":3,"file":"uiautomator2.js","names":["_lodash","_interopRequireDefault","require","_driver","_asyncbox","_appiumUiautomator2Server","_support","_bluebird","_helpers","_axios","_path","REQD_PARAMS","SERVER_LAUNCH_TIMEOUT","SERVER_INSTALL_RETRIES","SERVICES_LAUNCH_TIMEOUT","SERVER_PACKAGE_ID","exports","SERVER_TEST_PACKAGE_ID","INSTRUMENTATION_TARGET","instrumentationLogger","logger","getLogger","UIA2Proxy","JWProxy","proxyCommand","url","method","body","didInstrumentationExit","errors","InvalidContextError","UiAutomator2Server","constructor","log","opts","req","util","hasValue","Error","disableSuppressAccessibilityService","proxyOpts","server","host","port","systemPort","keepAlive","readTimeout","timeout","jwproxy","proxyReqRes","bind","command","installServerApk","installTimeout","tmpRoot","tempDir","openDir","packageInfosMapper","appPath","appId","helpers","isWriteable","info","dstPath","path","resolve","basename","fs","copyFile","packagesInfo","B","all","map","apkPath","testApkPath","shouldUninstallServerPackages","shouldInstallServerPackages","isAppInstalled","adb","checkApkCert","signApp","appState","getApplicationInstallState","debug","APP_INSTALL_STATE","OLDER_VERSION_INSTALLED","NEWER_VERSION_INSTALLED","includes","NOT_INSTALLED","uninstallApk","err","warn","message","install","noIncremental","replace","timeoutCapName","rimraf","verifyServicesAvailability","isPmServiceAvailable","pmOutput","pmError","waitForCondition","shell","e","waitMs","intervalMs","error","line","split","startSession","caps","cleanupAutomationLeftovers","skipServerInstallation","serverVersion","uiautomator2ServerLaunchTimeout","timer","timing","Timer","start","retries","maxRetries","delayBetweenRetries","startInstrumentationProcess","errorAndThrow","delay","getDuration","asMilliSeconds","toFixed","capabilities","firstMatch","alwaysMatch","cmd","disableWindowAnimation","push","_","isBoolean","instrumentationProcess","createSubProcess","on","stdout","stderr","output","trim","code","deleteSession","strictCleanup","value","axios","data","activeSessionIds","id","filter","Boolean","length","JSON","stringify","pluralize","delete","forceStop","ignore","killProcessesByName","_default","default"],"sources":["../../lib/uiautomator2.js"],"sourcesContent":["import _ from 'lodash';\nimport { JWProxy, errors } from 'appium/driver';\nimport { waitForCondition } from 'asyncbox';\nimport {\n  SERVER_APK_PATH as apkPath,\n  TEST_APK_PATH as testApkPath,\n  version as serverVersion\n} from 'appium-uiautomator2-server';\nimport {\n  util, logger, tempDir, fs, timing\n} from 'appium/support';\nimport B from 'bluebird';\nimport helpers from './helpers';\nimport axios from 'axios';\nimport path from 'path';\n\nconst REQD_PARAMS = ['adb', 'tmpDir', 'host', 'systemPort', 'devicePort', 'disableWindowAnimation'];\nconst SERVER_LAUNCH_TIMEOUT = 30000;\nconst SERVER_INSTALL_RETRIES = 20;\nconst SERVICES_LAUNCH_TIMEOUT = 30000;\nconst SERVER_PACKAGE_ID = 'io.appium.uiautomator2.server';\nconst SERVER_TEST_PACKAGE_ID = `${SERVER_PACKAGE_ID}.test`;\nconst INSTRUMENTATION_TARGET = `${SERVER_TEST_PACKAGE_ID}/androidx.test.runner.AndroidJUnitRunner`;\nconst instrumentationLogger = logger.getLogger('Instrumentation');\n\nclass UIA2Proxy extends JWProxy {\n  async proxyCommand (url, method, body = null) {\n    if (this.didInstrumentationExit) {\n      throw new errors.InvalidContextError(\n        `'${method} ${url}' cannot be proxied to UiAutomator2 server because ` +\n        'the instrumentation process is not running (probably crashed). ' +\n        'Check the server log and/or the logcat output for more details');\n    }\n    return await super.proxyCommand(url, method, body);\n  }\n}\n\nclass UiAutomator2Server {\n  constructor (log, opts = {}) {\n    for (let req of REQD_PARAMS) {\n      if (!opts || !util.hasValue(opts[req])) {\n        throw new Error(`Option '${req}' is required!`);\n      }\n      this[req] = opts[req];\n    }\n    this.log = log;\n    this.disableSuppressAccessibilityService = opts.disableSuppressAccessibilityService;\n    const proxyOpts = {\n      log,\n      server: this.host,\n      port: this.systemPort,\n      keepAlive: true,\n    };\n    if (opts.readTimeout && opts.readTimeout > 0) {\n      proxyOpts.timeout = opts.readTimeout;\n    }\n    this.jwproxy = new UIA2Proxy(proxyOpts);\n    this.proxyReqRes = this.jwproxy.proxyReqRes.bind(this.jwproxy);\n    this.proxyCommand = this.jwproxy.command.bind(this.jwproxy);\n    this.jwproxy.didInstrumentationExit = false;\n  }\n\n  /**\n   * Installs the apks on to the device or emulator.\n   *\n   * @param {number} installTimeout - Installation timeout\n   */\n  async installServerApk (installTimeout = SERVER_INSTALL_RETRIES * 1000) {\n    const tmpRoot = await tempDir.openDir();\n    const packageInfosMapper = async ({appPath, appId}) => {\n      if (await helpers.isWriteable(appPath)) {\n        return { appPath, appId };\n      }\n\n      this.log.info(`Server package at '${appPath}' is not writeable. ` +\n        `Will copy it into the temporary location at '${tmpRoot}' as a workaround. ` +\n        `Consider making this file writeable manually in order to improve the performance of session startup.`);\n      const dstPath = path.resolve(tmpRoot, path.basename(appPath));\n      await fs.copyFile(appPath, dstPath);\n      return {\n        appPath: dstPath,\n        appId,\n      };\n    };\n\n    try {\n      const packagesInfo = await B.all(B.map([\n        {\n          appPath: apkPath,\n          appId: SERVER_PACKAGE_ID,\n        }, {\n          appPath: testApkPath,\n          appId: SERVER_TEST_PACKAGE_ID,\n        },\n      ], packageInfosMapper));\n\n      let shouldUninstallServerPackages = false;\n      let shouldInstallServerPackages = false;\n      for (const {appId, appPath} of packagesInfo) {\n        if (appId === SERVER_TEST_PACKAGE_ID) {\n          const isAppInstalled = await this.adb.isAppInstalled(appId);\n\n          // There is no point in getting the state for test server,\n          // since it does not contain version info\n          if (!await this.adb.checkApkCert(appPath, appId)) {\n            await helpers.signApp(this.adb, appPath);\n            shouldUninstallServerPackages = shouldUninstallServerPackages || isAppInstalled;\n            shouldInstallServerPackages = true;\n          }\n\n          if (!isAppInstalled) {\n            shouldInstallServerPackages = true;\n          }\n          continue;\n        }\n\n        const appState = await this.adb.getApplicationInstallState(appPath, appId);\n        this.log.debug(`${appId} installation state: ${appState}`);\n        if (await this.adb.checkApkCert(appPath, appId)) {\n          shouldUninstallServerPackages = shouldUninstallServerPackages || [\n            this.adb.APP_INSTALL_STATE.OLDER_VERSION_INSTALLED,\n            this.adb.APP_INSTALL_STATE.NEWER_VERSION_INSTALLED,\n          ].includes(appState);\n        } else {\n          await helpers.signApp(this.adb, appPath);\n          shouldUninstallServerPackages = shouldUninstallServerPackages || ![\n            this.adb.APP_INSTALL_STATE.NOT_INSTALLED,\n          ].includes(appState);\n        }\n        shouldInstallServerPackages = shouldInstallServerPackages || shouldUninstallServerPackages || [\n          this.adb.APP_INSTALL_STATE.NOT_INSTALLED,\n        ].includes(appState);\n      }\n      this.log.info(`Server packages are ${shouldInstallServerPackages ? '' : 'not '}going to be (re)installed`);\n      if (shouldInstallServerPackages && shouldUninstallServerPackages) {\n        this.log.info('Full packages reinstall is going to be performed');\n      }\n      for (const {appId, appPath} of packagesInfo) {\n        if (shouldUninstallServerPackages) {\n          try {\n            await this.adb.uninstallApk(appId);\n          } catch (err) {\n            this.log.warn(`Error uninstalling '${appId}': ${err.message}`);\n          }\n        }\n        if (shouldInstallServerPackages) {\n          await this.adb.install(appPath, {\n            noIncremental: true,\n            replace: true,\n            timeout: installTimeout,\n            timeoutCapName: 'uiautomator2ServerInstallTimeout'\n          });\n        }\n      }\n    } finally {\n      await fs.rimraf(tmpRoot);\n    }\n\n    await this.verifyServicesAvailability();\n  }\n\n  async verifyServicesAvailability () {\n    this.log.debug(`Waiting up to ${SERVICES_LAUNCH_TIMEOUT}ms for services to be available`);\n    let isPmServiceAvailable = false;\n    let pmOutput = '';\n    let pmError = null;\n    try {\n      await waitForCondition(async () => {\n        if (!isPmServiceAvailable) {\n          pmError = null;\n          pmOutput = '';\n          try {\n            pmOutput = await this.adb.shell(['pm', 'list', 'instrumentation']);\n          } catch (e) {\n            pmError = e;\n          }\n          if (pmOutput.includes('Could not access the Package Manager')) {\n            pmError = new Error(`Problem running Package Manager: ${pmOutput}`);\n            pmOutput = ''; // remove output, so it is not printed below\n          } else if (pmOutput.includes(INSTRUMENTATION_TARGET)) {\n            pmOutput = ''; // remove output, so it is not printed below\n            this.log.debug(`Instrumentation target '${INSTRUMENTATION_TARGET}' is available`);\n            // eslint-disable-next-line require-atomic-updates\n            isPmServiceAvailable = true;\n          } else if (!pmError) {\n            pmError = new Error('The instrumentation target is not listed by Package Manager');\n          }\n        }\n        return isPmServiceAvailable;\n      }, {\n        waitMs: SERVICES_LAUNCH_TIMEOUT,\n        intervalMs: 1000,\n      });\n    } catch (err) {\n      this.log.error(`Unable to find instrumentation target '${INSTRUMENTATION_TARGET}': ${(pmError || {}).message}`);\n      if (pmOutput) {\n        this.log.debug('Available targets:');\n        for (const line of pmOutput.split('\\n')) {\n          this.log.debug(`    ${line.replace('instrumentation:', '')}`);\n        }\n      }\n    }\n  }\n\n  async startSession (caps) {\n    await this.cleanupAutomationLeftovers();\n    if (caps.skipServerInstallation) {\n      this.log.info(`'skipServerInstallation' is set. Attempting to use UIAutomator2 server from the device`);\n    } else {\n      this.log.info(`Starting UIAutomator2 server ${serverVersion}`);\n      this.log.info(`Using UIAutomator2 server from '${apkPath}' and test from '${testApkPath}'`);\n    }\n\n    const timeout = caps.uiautomator2ServerLaunchTimeout || SERVER_LAUNCH_TIMEOUT;\n    const timer = new timing.Timer().start();\n    let retries = 0;\n    const maxRetries = 2;\n    const delayBetweenRetries = 3000;\n    while (retries < maxRetries) {\n      this.log.info(`Waiting up to ${timeout}ms for UiAutomator2 to be online...`);\n      this.jwproxy.didInstrumentationExit = false;\n      await this.startInstrumentationProcess();\n      if (!this.jwproxy.didInstrumentationExit) {\n        try {\n          await waitForCondition(async () => {\n            try {\n              await this.jwproxy.command('/status', 'GET');\n              return true;\n            } catch (err) {\n              // short circuit to retry or fail fast\n              return this.jwproxy.didInstrumentationExit;\n            }\n          }, {\n            waitMs: timeout,\n            intervalMs: 1000,\n          });\n        } catch (err) {\n          this.log.errorAndThrow(`The instrumentation process cannot be initialized within ${timeout}ms timeout. `\n            + 'Make sure the application under test does not crash and investigate the logcat output. '\n            + `You could also try to increase the value of 'uiautomator2ServerLaunchTimeout' capability`);\n        }\n      }\n      if (!this.jwproxy.didInstrumentationExit) {\n        break;\n      }\n\n      retries++;\n      if (retries >= maxRetries) {\n        this.log.errorAndThrow('The instrumentation process cannot be initialized. '\n          + 'Make sure the application under test does not crash and investigate the logcat output.');\n      }\n      this.log.warn(`The instrumentation process has been unexpectedly terminated. `\n        + `Retrying UiAutomator2 startup (#${retries} of ${maxRetries - 1})`);\n      await this.cleanupAutomationLeftovers(true);\n      await B.delay(delayBetweenRetries);\n    }\n\n    this.log.debug(`The initialization of the instrumentation process took `\n      + `${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    await this.jwproxy.command('/session', 'POST', {\n      capabilities: {\n        firstMatch: [caps],\n        alwaysMatch: {},\n      }\n    });\n  }\n\n  async startInstrumentationProcess () {\n    const cmd = ['am', 'instrument', '-w'];\n    if (this.disableWindowAnimation) {\n      cmd.push('--no-window-animation');\n    }\n    if (_.isBoolean(this.disableSuppressAccessibilityService)) {\n      cmd.push('-e', 'DISABLE_SUPPRESS_ACCESSIBILITY_SERVICES', this.disableSuppressAccessibilityService);\n    }\n    // Disable Google analytics to prevent possible fatal exception\n    cmd.push('-e', 'disableAnalytics', true);\n    cmd.push(INSTRUMENTATION_TARGET);\n    const instrumentationProcess = this.adb.createSubProcess(['shell', ...cmd]);\n    instrumentationProcess.on('output', (stdout, stderr) => {\n      const output = _.trim(stdout || stderr);\n      if (output) {\n        instrumentationLogger.debug(output);\n      }\n    });\n    instrumentationProcess.on('exit', (code) => {\n      instrumentationLogger.debug(`The process has exited with code ${code}`);\n      this.jwproxy.didInstrumentationExit = true;\n    });\n    await instrumentationProcess.start(0);\n  }\n\n  async deleteSession () {\n    this.log.debug('Deleting UiAutomator2 server session');\n    // rely on jwproxy's intelligence to know what we're talking about and\n    // delete the current session\n    try {\n      await this.jwproxy.command('/', 'DELETE');\n    } catch (err) {\n      this.log.warn(`Did not get confirmation UiAutomator2 deleteSession worked; ` +\n          `Error was: ${err}`);\n    }\n  }\n\n  async cleanupAutomationLeftovers (strictCleanup = false) {\n    this.log.debug(`Performing ${strictCleanup ? 'strict' : 'shallow'} cleanup of automation leftovers`);\n\n    try {\n      const {value} = (await axios({\n        url: `http://${this.host}:${this.systemPort}/sessions`,\n        timeout: 500,\n      })).data;\n      const activeSessionIds = value.map(({id}) => id).filter(Boolean);\n      if (activeSessionIds.length) {\n        this.log.debug(`The following obsolete sessions are still running: ${JSON.stringify(activeSessionIds)}`);\n        this.log.debug(`Cleaning up ${util.pluralize('obsolete session', activeSessionIds.length, true)}`);\n        await B.all(activeSessionIds\n          .map((id) => axios.delete(`http://${this.host}:${this.systemPort}/session/${id}`))\n        );\n        // Let all sessions to be properly terminated before continuing\n        await B.delay(1000);\n      } else {\n        this.log.debug('No obsolete sessions have been detected');\n      }\n    } catch (e) {\n      this.log.debug(`No obsolete sessions have been detected (${e.message})`);\n    }\n\n    try {\n      await this.adb.forceStop(SERVER_TEST_PACKAGE_ID);\n    } catch (ignore) {}\n    if (!strictCleanup) {\n      return;\n    }\n    // https://github.com/appium/appium/issues/10749\n    try {\n      await this.adb.killProcessesByName('uiautomator');\n    } catch (ignore) {}\n  }\n}\n\nexport { UiAutomator2Server, INSTRUMENTATION_TARGET, SERVER_PACKAGE_ID, SERVER_TEST_PACKAGE_ID };\nexport default UiAutomator2Server;\n"],"mappings":"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"}