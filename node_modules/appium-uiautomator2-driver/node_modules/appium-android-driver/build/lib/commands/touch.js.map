{"version":3,"file":"touch.js","names":["_lodash","_interopRequireDefault","require","_androidHelpers","_bluebird","_driver","_asyncbox","_support","commands","helpers","extensions","exports","getCoordDefault","val","util","hasValue","getSwipeTouchDuration","waitGesture","duration","options","ms","doTouchAction","action","opts","element","x","y","count","tap","touchDown","touchUp","touchMove","B","delay","touchLongClick","log","warn","errorAndThrow","doTouchDrag","gestures","longPress","moveTo","startX","startY","endX","endY","getLocationInView","apiLevel","adb","getApiLevel","Math","max","drag","fixRelease","release","_","last","clone","ref","gesture","reverse","loc","size","getSize","width","height","pick","performGesture","e","isErrorType","errors","NoSuchElementError","debug","getSwipeOptions","touchCount","destElement","locResult","sizeResult","offsetX","abs","offsetY","firstElLocation","performTouch","length","swipeOpts","swipe","actions","map","head","pop","slice","press","shift","wait","fixedGestures","parseTouch","g","multi","touchStateObjects","asyncmap","includes","offset","elementId","pos","touchStateObject","timeOffset","parseInt","prevPos","time","state","isUndefined","androidHelpers","truncateDecimals","touch","performMultiAction","Error","states","doPerformMultiAction","bootstrap","sendAction","Object","assign","_default","default"],"sources":["../../../lib/commands/touch.js"],"sourcesContent":["import _ from 'lodash';\nimport androidHelpers from '../android-helpers';\nimport B from 'bluebird';\nimport { errors, isErrorType } from 'appium/driver';\nimport { asyncmap } from 'asyncbox';\nimport { util } from '@appium/support';\n\nlet commands = {}, helpers = {}, extensions = {};\n\nfunction getCoordDefault (val) {\n  // going the long way and checking for undefined and null since\n  // we can't be assured `elId` is a string and not an int. Same\n  // thing with destElement below.\n  return util.hasValue(val) ? val : 0.5;\n}\n\nfunction getSwipeTouchDuration (waitGesture) {\n  // the touch action api uses ms, we want seconds\n  // 0.8 is the default time for the operation\n  let duration = 0.8;\n  if (typeof waitGesture.options.ms !== 'undefined' && waitGesture.options.ms) {\n    duration = waitGesture.options.ms / 1000;\n    if (duration === 0) {\n      // set to a very low number, since they wanted it fast\n      // but below 0.1 becomes 0 steps, which causes errors\n      duration = 0.1;\n    }\n  }\n  return duration;\n}\n\ncommands.doTouchAction = async function doTouchAction (action, opts = {}) {\n  const { element, x, y, count, ms, duration } = opts;\n  // parseTouch precalculates absolute element positions\n  // so there is no need to pass `element` to the affected gestures\n  switch (action) {\n    case 'tap':\n      return await this.tap(null, x, y, count);\n    case 'press':\n      return await this.touchDown(null, x, y);\n    case 'release':\n      return await this.touchUp(element, x, y);\n    case 'moveTo':\n      return await this.touchMove(null, x, y);\n    case 'wait':\n      return await B.delay(ms);\n    case 'longPress':\n      return await this.touchLongClick(null, x, y, duration || 1000);\n    case 'cancel':\n      // TODO: clarify behavior of 'cancel' action and fix this\n      this.log.warn('Cancel action currently has no effect');\n      break;\n    default:\n      this.log.errorAndThrow(`unknown action ${action}`);\n  }\n};\n\n// drag is *not* press-move-release, so we need to translate\n// drag works fine for scroll, as well\nhelpers.doTouchDrag = async function doTouchDrag (gestures) {\n  let longPress = gestures[0];\n  let moveTo = gestures[1];\n  let startX = longPress.options.x || 0,\n      startY = longPress.options.y || 0,\n      endX = moveTo.options.x || 0,\n      endY = moveTo.options.y || 0;\n  if (longPress.options.element) {\n    let {x, y} = await this.getLocationInView(longPress.options.element);\n    startX += x || 0;\n    startY += y || 0;\n  }\n  if (moveTo.options.element) {\n    let {x, y} = await this.getLocationInView(moveTo.options.element);\n    endX += x || 0;\n    endY += y || 0;\n  }\n\n  let apiLevel = await this.adb.getApiLevel();\n  // lollipop takes a little longer to get things rolling\n  let duration = apiLevel >= 5 ? 2 : 1;\n  // make sure that if the long press has a duration, we use it.\n  if (longPress.options && longPress.options.duration) {\n    duration = Math.max(longPress.options.duration / 1000, duration);\n  }\n\n  // `drag` will take care of whether there is an element or not at that level\n  return await this.drag(startX, startY, endX, endY, duration, 1, longPress.options.element, moveTo.options.element);\n};\n\n// Release gesture needs element or co-ordinates to release it from that position\n// or else release gesture is performed from center of the screen, so to fix it\n// This method sets co-ordinates/element to release gesture if it has no options set already.\nhelpers.fixRelease = async function fixRelease (gestures) {\n  let release = _.last(gestures);\n  // sometimes there are no options\n  release.options = release.options || {};\n  // nothing to do if release options are already set\n  if (release.options.element || (release.options.x && release.options.y)) {\n    return;\n  }\n  // without coordinates, `release` uses the center of the screen, which,\n  // generally speaking, is not what we want\n  // therefore: loop backwards and use the last command with an element and/or\n  // offset coordinates\n  gestures = _.clone(gestures);\n  let ref = null;\n  for (let gesture of gestures.reverse()) {\n    let opts = gesture.options;\n    if (opts.element || (opts.x && opts.y)) {\n      ref = gesture;\n      break;\n    }\n  }\n  if (ref) {\n    let opts = ref.options;\n    if (opts.element) {\n      let loc = await this.getLocationInView(opts.element);\n      if (opts.x && opts.y) {\n        // this is an offset from the element\n        release.options = {\n          x: loc.x + opts.x,\n          y: loc.y + opts.y\n        };\n      } else {\n        // this is the center of the element\n        let size = await this.getSize(opts.element);\n        release.options = {\n          x: loc.x + size.width / 2,\n          y: loc.y + size.height / 2\n        };\n      }\n    } else {\n      release.options = _.pick(opts, 'x', 'y');\n    }\n  }\n  return release;\n};\n\n// Perform one gesture\nhelpers.performGesture = async function performGesture (gesture) {\n  try {\n    return await this.doTouchAction(gesture.action, gesture.options || {});\n  } catch (e) {\n    // sometime the element is not available when releasing, retry without it\n    if (isErrorType(e, errors.NoSuchElementError) && gesture.action === 'release' &&\n        gesture.options.element) {\n      delete gesture.options.element;\n      this.log.debug(`retrying release without element opts: ${gesture.options}.`);\n      return await this.doTouchAction(gesture.action, gesture.options || {});\n    }\n    throw e;\n  }\n};\n\ncommands.getSwipeOptions = async function getSwipeOptions (gestures, touchCount = 1) {\n  let startX = getCoordDefault(gestures[0].options.x),\n      startY = getCoordDefault(gestures[0].options.y),\n      endX = getCoordDefault(gestures[2].options.x),\n      endY = getCoordDefault(gestures[2].options.y),\n      duration = getSwipeTouchDuration(gestures[1]),\n      element = gestures[0].options.element,\n      destElement = gestures[2].options.element || gestures[0].options.element;\n\n  // there's no destination element handling in bootstrap and since it applies to all platforms, we handle it here\n  if (util.hasValue(destElement)) {\n    let locResult = await this.getLocationInView(destElement);\n    let sizeResult = await this.getSize(destElement);\n    let offsetX = (Math.abs(endX) < 1 && Math.abs(endX) > 0) ? sizeResult.width * endX : endX;\n    let offsetY = (Math.abs(endY) < 1 && Math.abs(endY) > 0) ? sizeResult.height * endY : endY;\n    endX = locResult.x + offsetX;\n    endY = locResult.y + offsetY;\n    // if the target element was provided, the coordinates for the destination need to be relative to it.\n    if (util.hasValue(element)) {\n      let firstElLocation = await this.getLocationInView(element);\n      endX -= firstElLocation.x;\n      endY -= firstElLocation.y;\n    }\n  }\n  // clients are responsible to use these options correctly\n  return {startX, startY, endX, endY, duration, touchCount, element};\n};\n\ncommands.performTouch = async function performTouch (gestures) {\n  // press-wait-moveTo-release is `swipe`, so use native method\n  if (gestures.length === 4 &&\n      gestures[0].action === 'press' &&\n      gestures[1].action === 'wait' &&\n      gestures[2].action === 'moveTo' &&\n      gestures[3].action === 'release') {\n\n    let swipeOpts = await this.getSwipeOptions(gestures);\n    return await this.swipe(swipeOpts.startX, swipeOpts.startY, swipeOpts.endX,\n        swipeOpts.endY, swipeOpts.duration, swipeOpts.touchCount,\n        swipeOpts.element);\n  }\n  let actions = _.map(gestures, 'action');\n\n  if (actions[0] === 'longPress' && actions[1] === 'moveTo' && actions[2] === 'release') {\n    // some things are special\n    return await this.doTouchDrag(gestures);\n  } else {\n    if (actions.length === 2) {\n      // `press` without a wait is too slow and gets interpretted as a `longPress`\n      if (_.head(actions) === 'press' && _.last(actions) === 'release') {\n        actions[0] = 'tap';\n        gestures[0].action = 'tap';\n      }\n\n      // the `longPress` and `tap` methods release on their own\n      if ((_.head(actions) === 'tap' || _.head(actions) === 'longPress') && _.last(actions) === 'release') {\n        gestures.pop();\n        actions.pop();\n      }\n    } else {\n      // longpress followed by anything other than release should become a press and wait\n      if (actions[0] === 'longPress') {\n        actions = ['press', 'wait', ...actions.slice(1)];\n\n        let press = gestures.shift();\n        press.action = 'press';\n        let wait = {\n          action: 'wait',\n          options: {ms: press.options.duration || 1000}\n        };\n        delete press.options.duration;\n        gestures = [press, wait, ...gestures];\n      }\n    }\n\n    let fixedGestures = await this.parseTouch(gestures, false);\n    // fix release action then perform all actions\n    if (actions[actions.length - 1] === 'release') {\n      actions[actions.length - 1] = await this.fixRelease(gestures);\n    }\n    for (let g of fixedGestures) {\n      await this.performGesture(g);\n    }\n  }\n};\n\nhelpers.parseTouch = async function parseTouch (gestures, multi) {\n  // because multi-touch releases at the end by default\n  if (multi && _.last(gestures).action === 'release') {\n    gestures.pop();\n  }\n\n  let touchStateObjects = await asyncmap(gestures, async (gesture) => {\n    let options = gesture.options || {};\n    if (_.includes(['press', 'moveTo', 'tap', 'longPress'], gesture.action)) {\n      options.offset = false;\n      let elementId = gesture.options.element;\n      if (elementId) {\n        let pos = await this.getLocationInView(elementId);\n        if (gesture.options.x || gesture.options.y) {\n          options.x = pos.x + (gesture.options.x || 0);\n          options.y = pos.y + (gesture.options.y || 0);\n        } else {\n          const {width, height} = await this.getSize(elementId);\n          options.x = pos.x + (width / 2);\n          options.y = pos.y + (height / 2);\n        }\n        let touchStateObject = {\n          action: gesture.action,\n          options,\n          timeOffset: 0.005,\n        };\n        return touchStateObject;\n      } else {\n        options.x = (gesture.options.x || 0);\n        options.y = (gesture.options.y || 0);\n\n        let touchStateObject = {\n          action: gesture.action,\n          options,\n          timeOffset: 0.005,\n        };\n        return touchStateObject;\n      }\n    } else {\n      let offset = 0.005;\n      if (gesture.action === 'wait') {\n        options = gesture.options;\n        offset = (parseInt(gesture.options.ms, 10) / 1000);\n      }\n      let touchStateObject = {\n        action: gesture.action,\n        options,\n        timeOffset: offset,\n      };\n      return touchStateObject;\n    }\n  }, false);\n  // we need to change the time (which is now an offset)\n  // and the position (which may be an offset)\n  let prevPos = null,\n      time = 0;\n  for (let state of touchStateObjects) {\n    if (_.isUndefined(state.options.x) && _.isUndefined(state.options.y) && prevPos !== null) {\n      // this happens with wait\n      state.options.x = prevPos.x;\n      state.options.y = prevPos.y;\n    }\n    if (state.options.offset && prevPos) {\n      // the current position is an offset\n      state.options.x += prevPos.x;\n      state.options.y += prevPos.y;\n    }\n    delete state.options.offset;\n    if (!_.isUndefined(state.options.x) && !_.isUndefined(state.options.y)) {\n      prevPos = state.options;\n    }\n\n    if (multi) {\n      let timeOffset = state.timeOffset;\n      time += timeOffset;\n      state.time = androidHelpers.truncateDecimals(time, 3);\n\n      // multi gestures require 'touch' rather than 'options'\n      if (!_.isUndefined(state.options.x) && !_.isUndefined(state.options.y)) {\n        state.touch = {\n          x: state.options.x,\n          y: state.options.y\n        };\n      }\n      delete state.options;\n    }\n    delete state.timeOffset;\n  }\n  return touchStateObjects;\n};\n\n\ncommands.performMultiAction = async function performMultiAction (actions, elementId) {\n  // Android needs at least two actions to be able to perform a multi pointer gesture\n  if (actions.length === 1) {\n    throw new Error('Multi Pointer Gestures need at least two actions. ' +\n        'Use Touch Actions for a single action.');\n  }\n\n  const states = await asyncmap(actions, async (action) => await this.parseTouch(action, true), false);\n\n  return await this.doPerformMultiAction(elementId, states);\n};\n\n/**\n * Reason for isolating doPerformMultiAction from performMultiAction is for reusing performMultiAction\n * across android-drivers (like appium-uiautomator2-driver) and to avoid code duplication.\n * Other android-drivers (like appium-uiautomator2-driver) need to override doPerformMultiAction\n * to facilitate performMultiAction.\n */\ncommands.doPerformMultiAction = async function doPerformMultiAction (elementId, states) {\n  let opts;\n  if (elementId) {\n    opts = {\n      elementId,\n      actions: states\n    };\n    return await this.bootstrap.sendAction('element:performMultiPointerGesture', opts);\n  } else {\n    opts = {\n      actions: states\n    };\n    return await this.bootstrap.sendAction('performMultiPointerGesture', opts);\n  }\n};\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers };\nexport default extensions;\n"],"mappings":";;;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,eAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,SAAA,GAAAJ,OAAA;AACA,IAAAK,QAAA,GAAAL,OAAA;AAEA,IAAIM,QAAQ,GAAG,CAAC,CAAC;EAAEC,OAAO,GAAG,CAAC,CAAC;EAAEC,UAAU,GAAG,CAAC,CAAC;AAACC,OAAA,CAAAF,OAAA,GAAAA,OAAA;AAAAE,OAAA,CAAAH,QAAA,GAAAA,QAAA;AAEjD,SAASI,eAAeA,CAAEC,GAAG,EAAE;EAI7B,OAAOC,aAAI,CAACC,QAAQ,CAACF,GAAG,CAAC,GAAGA,GAAG,GAAG,GAAG;AACvC;AAEA,SAASG,qBAAqBA,CAAEC,WAAW,EAAE;EAG3C,IAAIC,QAAQ,GAAG,GAAG;EAClB,IAAI,OAAOD,WAAW,CAACE,OAAO,CAACC,EAAE,KAAK,WAAW,IAAIH,WAAW,CAACE,OAAO,CAACC,EAAE,EAAE;IAC3EF,QAAQ,GAAGD,WAAW,CAACE,OAAO,CAACC,EAAE,GAAG,IAAI;IACxC,IAAIF,QAAQ,KAAK,CAAC,EAAE;MAGlBA,QAAQ,GAAG,GAAG;IAChB;EACF;EACA,OAAOA,QAAQ;AACjB;AAEAV,QAAQ,CAACa,aAAa,GAAG,eAAeA,aAAaA,CAAEC,MAAM,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACxE,MAAM;IAAEC,OAAO;IAAEC,CAAC;IAAEC,CAAC;IAAEC,KAAK;IAAEP,EAAE;IAAEF;EAAS,CAAC,GAAGK,IAAI;EAGnD,QAAQD,MAAM;IACZ,KAAK,KAAK;MACR,OAAO,MAAM,IAAI,CAACM,GAAG,CAAC,IAAI,EAAEH,CAAC,EAAEC,CAAC,EAAEC,KAAK,CAAC;IAC1C,KAAK,OAAO;MACV,OAAO,MAAM,IAAI,CAACE,SAAS,CAAC,IAAI,EAAEJ,CAAC,EAAEC,CAAC,CAAC;IACzC,KAAK,SAAS;MACZ,OAAO,MAAM,IAAI,CAACI,OAAO,CAACN,OAAO,EAAEC,CAAC,EAAEC,CAAC,CAAC;IAC1C,KAAK,QAAQ;MACX,OAAO,MAAM,IAAI,CAACK,SAAS,CAAC,IAAI,EAAEN,CAAC,EAAEC,CAAC,CAAC;IACzC,KAAK,MAAM;MACT,OAAO,MAAMM,iBAAC,CAACC,KAAK,CAACb,EAAE,CAAC;IAC1B,KAAK,WAAW;MACd,OAAO,MAAM,IAAI,CAACc,cAAc,CAAC,IAAI,EAAET,CAAC,EAAEC,CAAC,EAAER,QAAQ,IAAI,IAAI,CAAC;IAChE,KAAK,QAAQ;MAEX,IAAI,CAACiB,GAAG,CAACC,IAAI,CAAC,uCAAuC,CAAC;MACtD;IACF;MACE,IAAI,CAACD,GAAG,CAACE,aAAa,CAAE,kBAAiBf,MAAO,EAAC,CAAC;EACtD;AACF,CAAC;AAIDb,OAAO,CAAC6B,WAAW,GAAG,eAAeA,WAAWA,CAAEC,QAAQ,EAAE;EAC1D,IAAIC,SAAS,GAAGD,QAAQ,CAAC,CAAC,CAAC;EAC3B,IAAIE,MAAM,GAAGF,QAAQ,CAAC,CAAC,CAAC;EACxB,IAAIG,MAAM,GAAGF,SAAS,CAACrB,OAAO,CAACM,CAAC,IAAI,CAAC;IACjCkB,MAAM,GAAGH,SAAS,CAACrB,OAAO,CAACO,CAAC,IAAI,CAAC;IACjCkB,IAAI,GAAGH,MAAM,CAACtB,OAAO,CAACM,CAAC,IAAI,CAAC;IAC5BoB,IAAI,GAAGJ,MAAM,CAACtB,OAAO,CAACO,CAAC,IAAI,CAAC;EAChC,IAAIc,SAAS,CAACrB,OAAO,CAACK,OAAO,EAAE;IAC7B,IAAI;MAACC,CAAC;MAAEC;IAAC,CAAC,GAAG,MAAM,IAAI,CAACoB,iBAAiB,CAACN,SAAS,CAACrB,OAAO,CAACK,OAAO,CAAC;IACpEkB,MAAM,IAAIjB,CAAC,IAAI,CAAC;IAChBkB,MAAM,IAAIjB,CAAC,IAAI,CAAC;EAClB;EACA,IAAIe,MAAM,CAACtB,OAAO,CAACK,OAAO,EAAE;IAC1B,IAAI;MAACC,CAAC;MAAEC;IAAC,CAAC,GAAG,MAAM,IAAI,CAACoB,iBAAiB,CAACL,MAAM,CAACtB,OAAO,CAACK,OAAO,CAAC;IACjEoB,IAAI,IAAInB,CAAC,IAAI,CAAC;IACdoB,IAAI,IAAInB,CAAC,IAAI,CAAC;EAChB;EAEA,IAAIqB,QAAQ,GAAG,MAAM,IAAI,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC;EAE3C,IAAI/B,QAAQ,GAAG6B,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EAEpC,IAAIP,SAAS,CAACrB,OAAO,IAAIqB,SAAS,CAACrB,OAAO,CAACD,QAAQ,EAAE;IACnDA,QAAQ,GAAGgC,IAAI,CAACC,GAAG,CAACX,SAAS,CAACrB,OAAO,CAACD,QAAQ,GAAG,IAAI,EAAEA,QAAQ,CAAC;EAClE;EAGA,OAAO,MAAM,IAAI,CAACkC,IAAI,CAACV,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAE3B,QAAQ,EAAE,CAAC,EAAEsB,SAAS,CAACrB,OAAO,CAACK,OAAO,EAAEiB,MAAM,CAACtB,OAAO,CAACK,OAAO,CAAC;AACpH,CAAC;AAKDf,OAAO,CAAC4C,UAAU,GAAG,eAAeA,UAAUA,CAAEd,QAAQ,EAAE;EACxD,IAAIe,OAAO,GAAGC,eAAC,CAACC,IAAI,CAACjB,QAAQ,CAAC;EAE9Be,OAAO,CAACnC,OAAO,GAAGmC,OAAO,CAACnC,OAAO,IAAI,CAAC,CAAC;EAEvC,IAAImC,OAAO,CAACnC,OAAO,CAACK,OAAO,IAAK8B,OAAO,CAACnC,OAAO,CAACM,CAAC,IAAI6B,OAAO,CAACnC,OAAO,CAACO,CAAE,EAAE;IACvE;EACF;EAKAa,QAAQ,GAAGgB,eAAC,CAACE,KAAK,CAAClB,QAAQ,CAAC;EAC5B,IAAImB,GAAG,GAAG,IAAI;EACd,KAAK,IAAIC,OAAO,IAAIpB,QAAQ,CAACqB,OAAO,CAAC,CAAC,EAAE;IACtC,IAAIrC,IAAI,GAAGoC,OAAO,CAACxC,OAAO;IAC1B,IAAII,IAAI,CAACC,OAAO,IAAKD,IAAI,CAACE,CAAC,IAAIF,IAAI,CAACG,CAAE,EAAE;MACtCgC,GAAG,GAAGC,OAAO;MACb;IACF;EACF;EACA,IAAID,GAAG,EAAE;IACP,IAAInC,IAAI,GAAGmC,GAAG,CAACvC,OAAO;IACtB,IAAII,IAAI,CAACC,OAAO,EAAE;MAChB,IAAIqC,GAAG,GAAG,MAAM,IAAI,CAACf,iBAAiB,CAACvB,IAAI,CAACC,OAAO,CAAC;MACpD,IAAID,IAAI,CAACE,CAAC,IAAIF,IAAI,CAACG,CAAC,EAAE;QAEpB4B,OAAO,CAACnC,OAAO,GAAG;UAChBM,CAAC,EAAEoC,GAAG,CAACpC,CAAC,GAAGF,IAAI,CAACE,CAAC;UACjBC,CAAC,EAAEmC,GAAG,CAACnC,CAAC,GAAGH,IAAI,CAACG;QAClB,CAAC;MACH,CAAC,MAAM;QAEL,IAAIoC,IAAI,GAAG,MAAM,IAAI,CAACC,OAAO,CAACxC,IAAI,CAACC,OAAO,CAAC;QAC3C8B,OAAO,CAACnC,OAAO,GAAG;UAChBM,CAAC,EAAEoC,GAAG,CAACpC,CAAC,GAAGqC,IAAI,CAACE,KAAK,GAAG,CAAC;UACzBtC,CAAC,EAAEmC,GAAG,CAACnC,CAAC,GAAGoC,IAAI,CAACG,MAAM,GAAG;QAC3B,CAAC;MACH;IACF,CAAC,MAAM;MACLX,OAAO,CAACnC,OAAO,GAAGoC,eAAC,CAACW,IAAI,CAAC3C,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;IAC1C;EACF;EACA,OAAO+B,OAAO;AAChB,CAAC;AAGD7C,OAAO,CAAC0D,cAAc,GAAG,eAAeA,cAAcA,CAAER,OAAO,EAAE;EAC/D,IAAI;IACF,OAAO,MAAM,IAAI,CAACtC,aAAa,CAACsC,OAAO,CAACrC,MAAM,EAAEqC,OAAO,CAACxC,OAAO,IAAI,CAAC,CAAC,CAAC;EACxE,CAAC,CAAC,OAAOiD,CAAC,EAAE;IAEV,IAAI,IAAAC,mBAAW,EAACD,CAAC,EAAEE,cAAM,CAACC,kBAAkB,CAAC,IAAIZ,OAAO,CAACrC,MAAM,KAAK,SAAS,IACzEqC,OAAO,CAACxC,OAAO,CAACK,OAAO,EAAE;MAC3B,OAAOmC,OAAO,CAACxC,OAAO,CAACK,OAAO;MAC9B,IAAI,CAACW,GAAG,CAACqC,KAAK,CAAE,0CAAyCb,OAAO,CAACxC,OAAQ,GAAE,CAAC;MAC5E,OAAO,MAAM,IAAI,CAACE,aAAa,CAACsC,OAAO,CAACrC,MAAM,EAAEqC,OAAO,CAACxC,OAAO,IAAI,CAAC,CAAC,CAAC;IACxE;IACA,MAAMiD,CAAC;EACT;AACF,CAAC;AAED5D,QAAQ,CAACiE,eAAe,GAAG,eAAeA,eAAeA,CAAElC,QAAQ,EAAEmC,UAAU,GAAG,CAAC,EAAE;EACnF,IAAIhC,MAAM,GAAG9B,eAAe,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACM,CAAC,CAAC;IAC/CkB,MAAM,GAAG/B,eAAe,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACO,CAAC,CAAC;IAC/CkB,IAAI,GAAGhC,eAAe,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACM,CAAC,CAAC;IAC7CoB,IAAI,GAAGjC,eAAe,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACO,CAAC,CAAC;IAC7CR,QAAQ,GAAGF,qBAAqB,CAACuB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7Cf,OAAO,GAAGe,QAAQ,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACK,OAAO;IACrCmD,WAAW,GAAGpC,QAAQ,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACK,OAAO,IAAIe,QAAQ,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACK,OAAO;EAG5E,IAAIV,aAAI,CAACC,QAAQ,CAAC4D,WAAW,CAAC,EAAE;IAC9B,IAAIC,SAAS,GAAG,MAAM,IAAI,CAAC9B,iBAAiB,CAAC6B,WAAW,CAAC;IACzD,IAAIE,UAAU,GAAG,MAAM,IAAI,CAACd,OAAO,CAACY,WAAW,CAAC;IAChD,IAAIG,OAAO,GAAI5B,IAAI,CAAC6B,GAAG,CAACnC,IAAI,CAAC,GAAG,CAAC,IAAIM,IAAI,CAAC6B,GAAG,CAACnC,IAAI,CAAC,GAAG,CAAC,GAAIiC,UAAU,CAACb,KAAK,GAAGpB,IAAI,GAAGA,IAAI;IACzF,IAAIoC,OAAO,GAAI9B,IAAI,CAAC6B,GAAG,CAAClC,IAAI,CAAC,GAAG,CAAC,IAAIK,IAAI,CAAC6B,GAAG,CAAClC,IAAI,CAAC,GAAG,CAAC,GAAIgC,UAAU,CAACZ,MAAM,GAAGpB,IAAI,GAAGA,IAAI;IAC1FD,IAAI,GAAGgC,SAAS,CAACnD,CAAC,GAAGqD,OAAO;IAC5BjC,IAAI,GAAG+B,SAAS,CAAClD,CAAC,GAAGsD,OAAO;IAE5B,IAAIlE,aAAI,CAACC,QAAQ,CAACS,OAAO,CAAC,EAAE;MAC1B,IAAIyD,eAAe,GAAG,MAAM,IAAI,CAACnC,iBAAiB,CAACtB,OAAO,CAAC;MAC3DoB,IAAI,IAAIqC,eAAe,CAACxD,CAAC;MACzBoB,IAAI,IAAIoC,eAAe,CAACvD,CAAC;IAC3B;EACF;EAEA,OAAO;IAACgB,MAAM;IAAEC,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAE3B,QAAQ;IAAEwD,UAAU;IAAElD;EAAO,CAAC;AACpE,CAAC;AAEDhB,QAAQ,CAAC0E,YAAY,GAAG,eAAeA,YAAYA,CAAE3C,QAAQ,EAAE;EAE7D,IAAIA,QAAQ,CAAC4C,MAAM,KAAK,CAAC,IACrB5C,QAAQ,CAAC,CAAC,CAAC,CAACjB,MAAM,KAAK,OAAO,IAC9BiB,QAAQ,CAAC,CAAC,CAAC,CAACjB,MAAM,KAAK,MAAM,IAC7BiB,QAAQ,CAAC,CAAC,CAAC,CAACjB,MAAM,KAAK,QAAQ,IAC/BiB,QAAQ,CAAC,CAAC,CAAC,CAACjB,MAAM,KAAK,SAAS,EAAE;IAEpC,IAAI8D,SAAS,GAAG,MAAM,IAAI,CAACX,eAAe,CAAClC,QAAQ,CAAC;IACpD,OAAO,MAAM,IAAI,CAAC8C,KAAK,CAACD,SAAS,CAAC1C,MAAM,EAAE0C,SAAS,CAACzC,MAAM,EAAEyC,SAAS,CAACxC,IAAI,EACtEwC,SAAS,CAACvC,IAAI,EAAEuC,SAAS,CAAClE,QAAQ,EAAEkE,SAAS,CAACV,UAAU,EACxDU,SAAS,CAAC5D,OAAO,CAAC;EACxB;EACA,IAAI8D,OAAO,GAAG/B,eAAC,CAACgC,GAAG,CAAChD,QAAQ,EAAE,QAAQ,CAAC;EAEvC,IAAI+C,OAAO,CAAC,CAAC,CAAC,KAAK,WAAW,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;IAErF,OAAO,MAAM,IAAI,CAAChD,WAAW,CAACC,QAAQ,CAAC;EACzC,CAAC,MAAM;IACL,IAAI+C,OAAO,CAACH,MAAM,KAAK,CAAC,EAAE;MAExB,IAAI5B,eAAC,CAACiC,IAAI,CAACF,OAAO,CAAC,KAAK,OAAO,IAAI/B,eAAC,CAACC,IAAI,CAAC8B,OAAO,CAAC,KAAK,SAAS,EAAE;QAChEA,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;QAClB/C,QAAQ,CAAC,CAAC,CAAC,CAACjB,MAAM,GAAG,KAAK;MAC5B;MAGA,IAAI,CAACiC,eAAC,CAACiC,IAAI,CAACF,OAAO,CAAC,KAAK,KAAK,IAAI/B,eAAC,CAACiC,IAAI,CAACF,OAAO,CAAC,KAAK,WAAW,KAAK/B,eAAC,CAACC,IAAI,CAAC8B,OAAO,CAAC,KAAK,SAAS,EAAE;QACnG/C,QAAQ,CAACkD,GAAG,CAAC,CAAC;QACdH,OAAO,CAACG,GAAG,CAAC,CAAC;MACf;IACF,CAAC,MAAM;MAEL,IAAIH,OAAO,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;QAC9BA,OAAO,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,GAAGA,OAAO,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;QAEhD,IAAIC,KAAK,GAAGpD,QAAQ,CAACqD,KAAK,CAAC,CAAC;QAC5BD,KAAK,CAACrE,MAAM,GAAG,OAAO;QACtB,IAAIuE,IAAI,GAAG;UACTvE,MAAM,EAAE,MAAM;UACdH,OAAO,EAAE;YAACC,EAAE,EAAEuE,KAAK,CAACxE,OAAO,CAACD,QAAQ,IAAI;UAAI;QAC9C,CAAC;QACD,OAAOyE,KAAK,CAACxE,OAAO,CAACD,QAAQ;QAC7BqB,QAAQ,GAAG,CAACoD,KAAK,EAAEE,IAAI,EAAE,GAAGtD,QAAQ,CAAC;MACvC;IACF;IAEA,IAAIuD,aAAa,GAAG,MAAM,IAAI,CAACC,UAAU,CAACxD,QAAQ,EAAE,KAAK,CAAC;IAE1D,IAAI+C,OAAO,CAACA,OAAO,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,SAAS,EAAE;MAC7CG,OAAO,CAACA,OAAO,CAACH,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC9B,UAAU,CAACd,QAAQ,CAAC;IAC/D;IACA,KAAK,IAAIyD,CAAC,IAAIF,aAAa,EAAE;MAC3B,MAAM,IAAI,CAAC3B,cAAc,CAAC6B,CAAC,CAAC;IAC9B;EACF;AACF,CAAC;AAEDvF,OAAO,CAACsF,UAAU,GAAG,eAAeA,UAAUA,CAAExD,QAAQ,EAAE0D,KAAK,EAAE;EAE/D,IAAIA,KAAK,IAAI1C,eAAC,CAACC,IAAI,CAACjB,QAAQ,CAAC,CAACjB,MAAM,KAAK,SAAS,EAAE;IAClDiB,QAAQ,CAACkD,GAAG,CAAC,CAAC;EAChB;EAEA,IAAIS,iBAAiB,GAAG,MAAM,IAAAC,kBAAQ,EAAC5D,QAAQ,EAAE,MAAOoB,OAAO,IAAK;IAClE,IAAIxC,OAAO,GAAGwC,OAAO,CAACxC,OAAO,IAAI,CAAC,CAAC;IACnC,IAAIoC,eAAC,CAAC6C,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,EAAEzC,OAAO,CAACrC,MAAM,CAAC,EAAE;MACvEH,OAAO,CAACkF,MAAM,GAAG,KAAK;MACtB,IAAIC,SAAS,GAAG3C,OAAO,CAACxC,OAAO,CAACK,OAAO;MACvC,IAAI8E,SAAS,EAAE;QACb,IAAIC,GAAG,GAAG,MAAM,IAAI,CAACzD,iBAAiB,CAACwD,SAAS,CAAC;QACjD,IAAI3C,OAAO,CAACxC,OAAO,CAACM,CAAC,IAAIkC,OAAO,CAACxC,OAAO,CAACO,CAAC,EAAE;UAC1CP,OAAO,CAACM,CAAC,GAAG8E,GAAG,CAAC9E,CAAC,IAAIkC,OAAO,CAACxC,OAAO,CAACM,CAAC,IAAI,CAAC,CAAC;UAC5CN,OAAO,CAACO,CAAC,GAAG6E,GAAG,CAAC7E,CAAC,IAAIiC,OAAO,CAACxC,OAAO,CAACO,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,MAAM;UACL,MAAM;YAACsC,KAAK;YAAEC;UAAM,CAAC,GAAG,MAAM,IAAI,CAACF,OAAO,CAACuC,SAAS,CAAC;UACrDnF,OAAO,CAACM,CAAC,GAAG8E,GAAG,CAAC9E,CAAC,GAAIuC,KAAK,GAAG,CAAE;UAC/B7C,OAAO,CAACO,CAAC,GAAG6E,GAAG,CAAC7E,CAAC,GAAIuC,MAAM,GAAG,CAAE;QAClC;QACA,IAAIuC,gBAAgB,GAAG;UACrBlF,MAAM,EAAEqC,OAAO,CAACrC,MAAM;UACtBH,OAAO;UACPsF,UAAU,EAAE;QACd,CAAC;QACD,OAAOD,gBAAgB;MACzB,CAAC,MAAM;QACLrF,OAAO,CAACM,CAAC,GAAIkC,OAAO,CAACxC,OAAO,CAACM,CAAC,IAAI,CAAE;QACpCN,OAAO,CAACO,CAAC,GAAIiC,OAAO,CAACxC,OAAO,CAACO,CAAC,IAAI,CAAE;QAEpC,IAAI8E,gBAAgB,GAAG;UACrBlF,MAAM,EAAEqC,OAAO,CAACrC,MAAM;UACtBH,OAAO;UACPsF,UAAU,EAAE;QACd,CAAC;QACD,OAAOD,gBAAgB;MACzB;IACF,CAAC,MAAM;MACL,IAAIH,MAAM,GAAG,KAAK;MAClB,IAAI1C,OAAO,CAACrC,MAAM,KAAK,MAAM,EAAE;QAC7BH,OAAO,GAAGwC,OAAO,CAACxC,OAAO;QACzBkF,MAAM,GAAIK,QAAQ,CAAC/C,OAAO,CAACxC,OAAO,CAACC,EAAE,EAAE,EAAE,CAAC,GAAG,IAAK;MACpD;MACA,IAAIoF,gBAAgB,GAAG;QACrBlF,MAAM,EAAEqC,OAAO,CAACrC,MAAM;QACtBH,OAAO;QACPsF,UAAU,EAAEJ;MACd,CAAC;MACD,OAAOG,gBAAgB;IACzB;EACF,CAAC,EAAE,KAAK,CAAC;EAGT,IAAIG,OAAO,GAAG,IAAI;IACdC,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIC,KAAK,IAAIX,iBAAiB,EAAE;IACnC,IAAI3C,eAAC,CAACuD,WAAW,CAACD,KAAK,CAAC1F,OAAO,CAACM,CAAC,CAAC,IAAI8B,eAAC,CAACuD,WAAW,CAACD,KAAK,CAAC1F,OAAO,CAACO,CAAC,CAAC,IAAIiF,OAAO,KAAK,IAAI,EAAE;MAExFE,KAAK,CAAC1F,OAAO,CAACM,CAAC,GAAGkF,OAAO,CAAClF,CAAC;MAC3BoF,KAAK,CAAC1F,OAAO,CAACO,CAAC,GAAGiF,OAAO,CAACjF,CAAC;IAC7B;IACA,IAAImF,KAAK,CAAC1F,OAAO,CAACkF,MAAM,IAAIM,OAAO,EAAE;MAEnCE,KAAK,CAAC1F,OAAO,CAACM,CAAC,IAAIkF,OAAO,CAAClF,CAAC;MAC5BoF,KAAK,CAAC1F,OAAO,CAACO,CAAC,IAAIiF,OAAO,CAACjF,CAAC;IAC9B;IACA,OAAOmF,KAAK,CAAC1F,OAAO,CAACkF,MAAM;IAC3B,IAAI,CAAC9C,eAAC,CAACuD,WAAW,CAACD,KAAK,CAAC1F,OAAO,CAACM,CAAC,CAAC,IAAI,CAAC8B,eAAC,CAACuD,WAAW,CAACD,KAAK,CAAC1F,OAAO,CAACO,CAAC,CAAC,EAAE;MACtEiF,OAAO,GAAGE,KAAK,CAAC1F,OAAO;IACzB;IAEA,IAAI8E,KAAK,EAAE;MACT,IAAIQ,UAAU,GAAGI,KAAK,CAACJ,UAAU;MACjCG,IAAI,IAAIH,UAAU;MAClBI,KAAK,CAACD,IAAI,GAAGG,uBAAc,CAACC,gBAAgB,CAACJ,IAAI,EAAE,CAAC,CAAC;MAGrD,IAAI,CAACrD,eAAC,CAACuD,WAAW,CAACD,KAAK,CAAC1F,OAAO,CAACM,CAAC,CAAC,IAAI,CAAC8B,eAAC,CAACuD,WAAW,CAACD,KAAK,CAAC1F,OAAO,CAACO,CAAC,CAAC,EAAE;QACtEmF,KAAK,CAACI,KAAK,GAAG;UACZxF,CAAC,EAAEoF,KAAK,CAAC1F,OAAO,CAACM,CAAC;UAClBC,CAAC,EAAEmF,KAAK,CAAC1F,OAAO,CAACO;QACnB,CAAC;MACH;MACA,OAAOmF,KAAK,CAAC1F,OAAO;IACtB;IACA,OAAO0F,KAAK,CAACJ,UAAU;EACzB;EACA,OAAOP,iBAAiB;AAC1B,CAAC;AAGD1F,QAAQ,CAAC0G,kBAAkB,GAAG,eAAeA,kBAAkBA,CAAE5B,OAAO,EAAEgB,SAAS,EAAE;EAEnF,IAAIhB,OAAO,CAACH,MAAM,KAAK,CAAC,EAAE;IACxB,MAAM,IAAIgC,KAAK,CAAC,oDAAoD,GAChE,wCAAwC,CAAC;EAC/C;EAEA,MAAMC,MAAM,GAAG,MAAM,IAAAjB,kBAAQ,EAACb,OAAO,EAAE,MAAOhE,MAAM,IAAK,MAAM,IAAI,CAACyE,UAAU,CAACzE,MAAM,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC;EAEpG,OAAO,MAAM,IAAI,CAAC+F,oBAAoB,CAACf,SAAS,EAAEc,MAAM,CAAC;AAC3D,CAAC;AAQD5G,QAAQ,CAAC6G,oBAAoB,GAAG,eAAeA,oBAAoBA,CAAEf,SAAS,EAAEc,MAAM,EAAE;EACtF,IAAI7F,IAAI;EACR,IAAI+E,SAAS,EAAE;IACb/E,IAAI,GAAG;MACL+E,SAAS;MACThB,OAAO,EAAE8B;IACX,CAAC;IACD,OAAO,MAAM,IAAI,CAACE,SAAS,CAACC,UAAU,CAAC,oCAAoC,EAAEhG,IAAI,CAAC;EACpF,CAAC,MAAM;IACLA,IAAI,GAAG;MACL+D,OAAO,EAAE8B;IACX,CAAC;IACD,OAAO,MAAM,IAAI,CAACE,SAAS,CAACC,UAAU,CAAC,4BAA4B,EAAEhG,IAAI,CAAC;EAC5E;AACF,CAAC;AAEDiG,MAAM,CAACC,MAAM,CAAC/G,UAAU,EAAEF,QAAQ,EAAEC,OAAO,CAAC;AAAC,IAAAiH,QAAA,GAE9BhH,UAAU;AAAAC,OAAA,CAAAgH,OAAA,GAAAD,QAAA"}