"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFinders = void 0;
const parameter_1 = __importDefault(require("./parameter"));
const method_1 = __importDefault(require("./method"));
const signature_1 = __importDefault(require("./signature"));
const typedoc_1 = require("typedoc");
const types_1 = require("../types");
const nullFinder = {
    /**
     *
     * @returns A comment which was directly provided
     */
    getter: ({ comment }) => comment,
    commentSource: types_1.CommentSource.OtherComment,
};
function getFinders(refl) {
    if (!refl) {
        return [nullFinder];
    }
    switch (refl.kind) {
        case typedoc_1.ReflectionKind.Parameter:
            return [...parameter_1.default, nullFinder];
        case typedoc_1.ReflectionKind.Method:
        case typedoc_1.ReflectionKind.Property:
            return [...method_1.default, nullFinder];
        case typedoc_1.ReflectionKind.CallSignature:
            return [...signature_1.default, nullFinder];
    }
    return [nullFinder];
}
exports.getFinders = getFinders;
//# sourceMappingURL=finder.js.map