"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
Object.defineProperty(exports, "getAndroidBinaryPath", {
  enumerable: true,
  get: function () {
    return _systemCalls.getAndroidBinaryPath;
  }
});
require("source-map-support/register");
var _adbCommands = _interopRequireDefault(require("./adb-commands.js"));
var _androidManifest = _interopRequireDefault(require("./android-manifest.js"));
var _systemCalls = _interopRequireWildcard(require("./system-calls.js"));
var _apkSigning = _interopRequireDefault(require("./apk-signing.js"));
var _apkUtils = _interopRequireDefault(require("./apk-utils.js"));
var _apksUtils = _interopRequireDefault(require("./apks-utils.js"));
var _aabUtils = _interopRequireDefault(require("./aab-utils.js"));
var _adbEmuCommands = _interopRequireDefault(require("./adb-emu-commands.js"));
var _settingsClientCommands = _interopRequireDefault(require("./settings-client-commands"));
var _lockmgmt = _interopRequireDefault(require("./lockmgmt"));
var _keyboardCommands = _interopRequireDefault(require("./keyboard-commands"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
Object.assign(_adbCommands.default, _androidManifest.default, _systemCalls.default, _adbEmuCommands.default, _apkSigning.default, _apkUtils.default, _apksUtils.default, _aabUtils.default, _settingsClientCommands.default, _lockmgmt.default, _keyboardCommands.default);
var _default = _adbCommands.default;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYWRiQ29tbWFuZHMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9hbmRyb2lkTWFuaWZlc3QiLCJfc3lzdGVtQ2FsbHMiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIl9hcGtTaWduaW5nIiwiX2Fwa1V0aWxzIiwiX2Fwa3NVdGlscyIsIl9hYWJVdGlscyIsIl9hZGJFbXVDb21tYW5kcyIsIl9zZXR0aW5nc0NsaWVudENvbW1hbmRzIiwiX2xvY2ttZ210IiwiX2tleWJvYXJkQ29tbWFuZHMiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiYXNzaWduIiwibWV0aG9kcyIsIm1hbmlmZXN0TWV0aG9kcyIsInN5c3RlbUNhbGxNZXRob2RzIiwiZW11TWV0aG9kcyIsImFwa1NpZ25pbmdNZXRob2RzIiwiYXBrVXRpbHNNZXRob2RzIiwiYXBrc1V0aWxzTWV0aG9kcyIsImFhYlV0aWxzTWV0aG9kcyIsInNldHRpbmdzQ2xpZW50Q29tbWFuZHMiLCJsb2NrTWFuYWdlbWVudENvbW1hbmRzIiwia2V5Ym9hcmRDb21tYW5kcyIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi90b29scy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWV0aG9kcyBmcm9tICcuL2FkYi1jb21tYW5kcy5qcyc7XG5pbXBvcnQgbWFuaWZlc3RNZXRob2RzIGZyb20gJy4vYW5kcm9pZC1tYW5pZmVzdC5qcyc7XG5pbXBvcnQgc3lzdGVtQ2FsbE1ldGhvZHMsIHsgZ2V0QW5kcm9pZEJpbmFyeVBhdGggfSBmcm9tICcuL3N5c3RlbS1jYWxscy5qcyc7XG5pbXBvcnQgYXBrU2lnbmluZ01ldGhvZHMgZnJvbSAnLi9hcGstc2lnbmluZy5qcyc7XG5pbXBvcnQgYXBrVXRpbHNNZXRob2RzIGZyb20gJy4vYXBrLXV0aWxzLmpzJztcbmltcG9ydCBhcGtzVXRpbHNNZXRob2RzIGZyb20gJy4vYXBrcy11dGlscy5qcyc7XG5pbXBvcnQgYWFiVXRpbHNNZXRob2RzIGZyb20gJy4vYWFiLXV0aWxzLmpzJztcbmltcG9ydCBlbXVNZXRob2RzIGZyb20gJy4vYWRiLWVtdS1jb21tYW5kcy5qcyc7XG5pbXBvcnQgc2V0dGluZ3NDbGllbnRDb21tYW5kcyBmcm9tICcuL3NldHRpbmdzLWNsaWVudC1jb21tYW5kcyc7XG5pbXBvcnQgbG9ja01hbmFnZW1lbnRDb21tYW5kcyBmcm9tICcuL2xvY2ttZ210JztcbmltcG9ydCBrZXlib2FyZENvbW1hbmRzIGZyb20gJy4va2V5Ym9hcmQtY29tbWFuZHMnO1xuXG5PYmplY3QuYXNzaWduKFxuICAgIG1ldGhvZHMsXG4gICAgbWFuaWZlc3RNZXRob2RzLFxuICAgIHN5c3RlbUNhbGxNZXRob2RzLFxuICAgIGVtdU1ldGhvZHMsXG4gICAgYXBrU2lnbmluZ01ldGhvZHMsXG4gICAgYXBrVXRpbHNNZXRob2RzLFxuICAgIGFwa3NVdGlsc01ldGhvZHMsXG4gICAgYWFiVXRpbHNNZXRob2RzLFxuICAgIHNldHRpbmdzQ2xpZW50Q29tbWFuZHMsXG4gICAgbG9ja01hbmFnZW1lbnRDb21tYW5kcyxcbiAgICBrZXlib2FyZENvbW1hbmRzLFxuKTtcblxuZXhwb3J0IGRlZmF1bHQgbWV0aG9kcztcbmV4cG9ydCB7IGdldEFuZHJvaWRCaW5hcnlQYXRoIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsWUFBQSxH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