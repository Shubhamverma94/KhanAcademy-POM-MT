{"version":3,"file":"logcat.js","names":["_lodash","_interopRequireDefault","require","_support","_bluebird","_events","_teen_process","EventEmitter","events","log","logger","getLogger","MAX_BUFFER_SIZE","LOGCAT_PROC_STARTUP_TIMEOUT","SUPPORTED_FORMATS","SUPPORTED_PRIORITIES","DEFAULT_PRIORITY","DEFAULT_TAG","DEFAULT_FORMAT","requireFormat","format","includes","info","requireSpec","spec","tag","priority","split","resultTag","some","p","_","toLower","formatFilterSpecs","filterSpecs","isArray","filter","isString","startsWith","map","Logcat","constructor","opts","adb","clearLogs","clearDeviceLogsOnStart","debug","debugTrace","maxBufferSize","logs","logIdxSinceLastRequest","startCapture","started","B","_resolve","_reject","resolve","args","reject","clear","cmd","defaultArgs","util","quote","path","proc","SubProcess","on","code","signal","error","warn","lines","line","test","Error","outputHandler","trim","start","setTimeout","output","prefix","length","shift","outputObj","timestamp","Date","now","level","message","push","emit","isTrace","stopCapture","isRunning","removeAllListeners","stop","getLogs","result","slice","getAllLogs","exec","err","stderr","_default","exports","default"],"sources":["../../lib/logcat.js"],"sourcesContent":["import _ from 'lodash';\nimport { logger, util } from '@appium/support';\nimport B from 'bluebird';\nimport events from 'events';\nconst { EventEmitter } = events;\nimport { SubProcess, exec } from 'teen_process';\n\nconst log = logger.getLogger('Logcat');\nconst MAX_BUFFER_SIZE = 10000;\nconst LOGCAT_PROC_STARTUP_TIMEOUT = 10000;\nconst SUPPORTED_FORMATS = ['brief', 'process', 'tag', 'thread', 'raw', 'time', 'threadtime', 'long'];\nconst SUPPORTED_PRIORITIES = ['v', 'd', 'i', 'w', 'e', 'f', 's'];\nconst DEFAULT_PRIORITY = 'v';\nconst DEFAULT_TAG = '*';\nconst DEFAULT_FORMAT = 'threadtime';\n\nfunction requireFormat (format) {\n  if (!SUPPORTED_FORMATS.includes(format)) {\n    log.info(`The format value '${format}' is unknown. Supported values are: ${SUPPORTED_FORMATS}`);\n    log.info(`Defaulting to '${DEFAULT_FORMAT}'`);\n    return DEFAULT_FORMAT;\n  }\n  return format;\n}\n\nfunction requireSpec (spec) {\n  const [tag, priority] = spec.split(':');\n  let resultTag = tag;\n  if (!resultTag) {\n    log.info(`The tag value in spec '${spec}' cannot be empty`);\n    log.info(`Defaulting to '${DEFAULT_TAG}'`);\n    resultTag = DEFAULT_TAG;\n  }\n  if (!priority) {\n    log.info(`The priority value in spec '${spec}' is empty. Defaulting to Verbose (${DEFAULT_PRIORITY})`);\n    return `${resultTag}:${DEFAULT_PRIORITY}`;\n  }\n  if (!SUPPORTED_PRIORITIES.some((p) => _.toLower(priority) === _.toLower(p))) {\n    log.info(`The priority value in spec '${spec}' is unknown. Supported values are: ${SUPPORTED_PRIORITIES}`);\n    log.info(`Defaulting to Verbose (${DEFAULT_PRIORITY})`);\n    return `${resultTag}:${DEFAULT_PRIORITY}`;\n  }\n  return spec;\n}\n\nfunction formatFilterSpecs (filterSpecs) {\n  if (!_.isArray(filterSpecs)) {\n    filterSpecs = [filterSpecs];\n  }\n  return filterSpecs\n    .filter((spec) => spec && _.isString(spec) && !spec.startsWith('-'))\n    .map((spec) => spec.includes(':') ? requireSpec(spec) : spec);\n}\n\n\nclass Logcat extends EventEmitter {\n  constructor (opts = {}) {\n    super();\n    this.adb = opts.adb;\n    this.clearLogs = opts.clearDeviceLogsOnStart || false;\n    this.debug = opts.debug;\n    this.debugTrace = opts.debugTrace;\n    this.maxBufferSize = opts.maxBufferSize || MAX_BUFFER_SIZE;\n    this.logs = [];\n    this.logIdxSinceLastRequest = 0;\n  }\n\n  async startCapture (opts = {}) {\n    let started = false;\n    return await new B(async (_resolve, _reject) => { // eslint-disable-line promise/param-names\n      const resolve = function (...args) {\n        started = true;\n        _resolve(...args);\n      };\n      const reject = function (...args) {\n        started = true;\n        _reject(...args);\n      };\n\n      if (this.clearLogs) {\n        await this.clear();\n      }\n\n      const {\n        format = DEFAULT_FORMAT,\n        filterSpecs = [],\n      } = opts;\n      const cmd = [\n        ...this.adb.defaultArgs,\n        'logcat',\n        '-v', requireFormat(format),\n        ...formatFilterSpecs(filterSpecs),\n      ];\n      log.debug(`Starting logs capture with command: ${util.quote([this.adb.path, ...cmd])}`);\n      this.proc = new SubProcess(this.adb.path, cmd);\n      this.proc.on('exit', (code, signal) => {\n        log.error(`Logcat terminated with code ${code}, signal ${signal}`);\n        this.proc = null;\n        if (!started) {\n          log.warn('Logcat not started. Continuing');\n          resolve();\n        }\n      });\n      this.proc.on('lines-stderr', (lines) => {\n        for (let line of lines) {\n          if (/execvp\\(\\)/.test(line)) {\n            log.error('Logcat process failed to start');\n            reject(new Error(`Logcat process failed to start. stderr: ${line}`));\n          }\n          this.outputHandler(_.trim(line), 'STDERR: ');\n        }\n        resolve();\n      });\n      this.proc.on('lines-stdout', (lines) => {\n        resolve();\n        for (let line of lines) {\n          this.outputHandler(_.trim(line));\n        }\n      });\n      await this.proc.start(0);\n      // resolve after a timeout, even if no output was recorded\n      setTimeout(resolve, LOGCAT_PROC_STARTUP_TIMEOUT);\n    });\n  }\n\n  outputHandler (output, prefix = '') {\n    if (!output) {\n      return;\n    }\n\n    if (this.logs.length >= this.maxBufferSize) {\n      this.logs.shift();\n      if (this.logIdxSinceLastRequest > 0) {\n        --this.logIdxSinceLastRequest;\n      }\n    }\n    const outputObj = {\n      timestamp: Date.now(),\n      level: 'ALL',\n      message: output,\n    };\n    this.logs.push(outputObj);\n    this.emit('output', outputObj);\n    const isTrace = /W\\/Trace/.test(output);\n    if (this.debug && (!isTrace || this.debugTrace)) {\n      log.debug(prefix + output);\n    }\n  }\n\n  async stopCapture () {\n    log.debug('Stopping logcat capture');\n    if (!this.proc || !this.proc.isRunning) {\n      log.debug('Logcat already stopped');\n      this.proc = null;\n      return;\n    }\n    this.proc.removeAllListeners('exit');\n    await this.proc.stop();\n    this.proc = null;\n  }\n\n  getLogs () {\n    if (this.logIdxSinceLastRequest < this.logs.length) {\n      const result = this.logs.slice(this.logIdxSinceLastRequest);\n      this.logIdxSinceLastRequest = this.logs.length;\n      return result;\n    }\n    return [];\n  }\n\n  getAllLogs () {\n    return this.logs;\n  }\n\n  async clear () {\n    log.debug('Clearing logcat logs from device');\n    try {\n      const args = [...this.adb.defaultArgs, 'logcat', '-c'];\n      await exec(this.adb.path, args);\n    } catch (err) {\n      log.warn(`Failed to clear logcat logs: ${err.stderr || err.message}`);\n    }\n  }\n}\n\nexport default Logcat;\n"],"mappings":"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"}