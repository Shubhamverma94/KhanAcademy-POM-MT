{"version":3,"file":"adb.js","names":["_lodash","_interopRequireDefault","require","_os","_index","_interopRequireWildcard","_helpers","_logger","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DEFAULT_ADB_PORT","exports","DEFAULT_OPTS","sdkRoot","getSdkRootFromEnv","udid","appDeviceReadyTimeout","useKeystore","keystorePath","keystorePassword","keyAlias","keyPassword","executable","path","defaultArgs","tmpDir","os","tmpdir","curDeviceId","emulatorPort","logcat","binaries","instrumentProc","suppressKillServer","jars","adbPort","adbHost","adbExecTimeout","DEFAULT_ADB_EXEC_TIMEOUT","remoteAppsCacheLimit","buildToolsVersion","allowOfflineDevices","allowDelayAdb","ADB","constructor","opts","assign","_","defaultsDeep","cloneDeep","remoteAdbHost","push","remoteAdbPort","clone","originalOptions","pick","keys","cloneOptions","includes","splice","indexOf","createADB","adb","requireSdkRoot","getAdbWithCorrectAdbPath","adbExec","e","log","warn","stderr","message","fnName","fn","toPairs","methods","_default"],"sources":["../../lib/adb.js"],"sourcesContent":["import _ from 'lodash';\nimport os from 'os';\nimport methods, { getAndroidBinaryPath } from './tools/index.js';\nimport {\n  DEFAULT_ADB_EXEC_TIMEOUT, requireSdkRoot, getSdkRootFromEnv\n} from './helpers';\nimport log from './logger.js';\n\nconst DEFAULT_ADB_PORT = 5037;\nconst DEFAULT_OPTS = {\n  sdkRoot: getSdkRootFromEnv() || null,\n  udid: null,\n  appDeviceReadyTimeout: null,\n  useKeystore: null,\n  keystorePath: null,\n  keystorePassword: null,\n  keyAlias: null,\n  keyPassword: null,\n  executable: {path: 'adb', defaultArgs: []},\n  tmpDir: os.tmpdir(),\n  curDeviceId: null,\n  emulatorPort: null,\n  logcat: null,\n  binaries: {},\n  instrumentProc: null,\n  suppressKillServer: null,\n  jars: {},\n  adbPort: DEFAULT_ADB_PORT,\n  adbHost: null,\n  adbExecTimeout: DEFAULT_ADB_EXEC_TIMEOUT,\n  remoteAppsCacheLimit: 10,\n  buildToolsVersion: null,\n  allowOfflineDevices: false,\n  allowDelayAdb: true,\n};\n\nclass ADB {\n  constructor (opts = {}) {\n    Object.assign(this, opts);\n    _.defaultsDeep(this, _.cloneDeep(DEFAULT_OPTS));\n\n    if (opts.remoteAdbHost) {\n      this.executable.defaultArgs.push('-H', opts.remoteAdbHost);\n      this.adbHost = opts.remoteAdbHost;\n    }\n    // TODO figure out why we have this option as it does not appear to be\n    // used anywhere. Probably deprecate in favor of simple opts.adbPort\n    if (opts.remoteAdbPort) {\n      this.adbPort = opts.remoteAdbPort;\n    }\n    this.executable.defaultArgs.push('-P', this.adbPort);\n  }\n\n  /**\n   * Create a new instance of `ADB` that inherits configuration from this `ADB` instance.\n   * This avoids the need to call `ADB.createADB()` multiple times.\n   * @param {object} opts - Additional options mapping to pass to the `ADB` constructor.\n   * @returns {ADB} The resulting class instance.\n   */\n  clone (opts = {}) {\n    const originalOptions = _.cloneDeep(_.pick(this, Object.keys(DEFAULT_OPTS)));\n    const cloneOptions = _.defaultsDeep(opts, originalOptions);\n\n    // Reset default arguments created in the constructor.\n    // Without this code, -H and -P can be injected into defaultArgs multiple times.\n    const defaultArgs = cloneOptions.executable.defaultArgs;\n    if (cloneOptions.remoteAdbHost && defaultArgs.includes('-H')) {\n      defaultArgs.splice(defaultArgs.indexOf('-H'), 2);\n    }\n    if (defaultArgs.includes('-P')) {\n      defaultArgs.splice(defaultArgs.indexOf('-P'), 2);\n    }\n\n    return new ADB(cloneOptions);\n  }\n}\n\nADB.createADB = async function createADB (opts) {\n  const adb = new ADB(opts);\n  adb.sdkRoot = await requireSdkRoot(adb.sdkRoot);\n  await adb.getAdbWithCorrectAdbPath();\n  try {\n    await adb.adbExec(['start-server']);\n  } catch (e) {\n    log.warn(e.stderr || e.message);\n  }\n  return adb;\n};\n\n// add all the methods to the ADB prototype\nfor (const [fnName, fn] of _.toPairs(methods)) {\n  ADB.prototype[fnName] = fn;\n}\n\nexport default ADB;\nexport { ADB, DEFAULT_ADB_PORT, getAndroidBinaryPath, getSdkRootFromEnv };\n"],"mappings":"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"}