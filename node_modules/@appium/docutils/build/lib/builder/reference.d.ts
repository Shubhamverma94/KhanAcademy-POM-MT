/**
 * Builds reference documentation via TypeDoc.  The output is _markdown_, intended to be imported into MkDocs.
 *
 * @module
 */
/**
 * Executes TypeDoc _in the current process_
 *
 * You will probably want to run `updateNav()` after this.
 *
 * @privateRemarks Monkeypatches TypeDoc's homebrew "glob" implementation because it is broken
 * @parma typeDocJsonPath - Path to `typedoc.json`
 * @param opts - TypeDoc options
 */
export declare function runTypedoc(typeDocJsonPath: string, opts: Record<string, string>): Promise<void>;
/**
 * Options for {@linkcode buildReferenceDocs}
 */
export interface BuildReferenceOptions {
    /**
     * Path to `typedoc.json`
     */
    typedocJson?: string;
    /**
     * Current working directory
     */
    cwd?: string;
    /**
     * Path to `package.json`
     */
    packageJson?: string;
    /**
     * Path to `tsconfig.json`
     */
    tsconfigJson?: string;
    /**
     * "Title" for generated docs; this corresponds to {@linkcode typedoc.TypeDocOptionMap.name}
     */
    title?: string;
    /**
     * This is here because we pass it thru to TypeDoc
     */
    logLevel?: LogLevelName;
}
/**
 * Log level names as supported by this package
 *
 * Used to convert our log level to TypeDoc's
 */
type LogLevelName = 'debug' | 'info' | 'error' | 'warn';
/**
 * Build reference documentation via TypeDoc
 * @param opts - Options
 */
export declare function buildReferenceDocs({ typedocJson: typeDocJsonPath, cwd, tsconfigJson: tsconfig, logLevel, title, }?: BuildReferenceOptions): Promise<void>;
export {};
//# sourceMappingURL=reference.d.ts.map