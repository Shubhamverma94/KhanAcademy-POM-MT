import { Context } from 'typedoc';
import { AppiumPluginLogger } from '../logger';
import { BuiltinCommands } from '../model/builtin-commands';
import { BaseConverter } from './base-converter';
import { KnownMethods } from './types';
/**
 * Name of the builtin method map in `@appium/base-driver`
 */
export declare const NAME_METHOD_MAP = "METHOD_MAP";
export declare const NAME_BASE_DRIVER_CLASS = "BaseDriver";
/**
 * Name of the module which contains the builtin method map
 */
export declare const NAME_BUILTIN_COMMAND_MODULE = "@appium/base-driver";
export declare class BuiltinMethodMapConverter extends BaseConverter<BuiltinCommands> {
    protected readonly knownBuiltinMethods: KnownMethods;
    /**
     * Creates a child logger for this instance
     * @param ctx Typedoc Context
     * @param log Logger
     */
    constructor(ctx: Context, log: AppiumPluginLogger, knownBuiltinMethods: KnownMethods);
    /**
     * Converts `@appium/base-driver` into a `RouteMap`, if it can.
     *
     * @returns Object containing a declaration reflection of `@appium/base-driver` and its associated
     * route map (if found).
     */
    convert(): BuiltinCommands;
}
//# sourceMappingURL=builtin-method-map.d.ts.map